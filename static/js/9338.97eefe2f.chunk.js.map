{"version":3,"file":"static/js/9338.97eefe2f.chunk.js","mappings":"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","sources":["nft/components/bag/MobileHoverBag.tsx","nft/components/bag/MobileHoverBag.css.ts","nft/components/collection/ActivitySwitcher.css.ts","nft/components/collection/ActivitySwitcher.tsx","nft/components/collection/CollectionAsset.tsx","nft/hooks/useTraitsOpen.ts","nft/components/collection/Filters.css.ts","nft/components/collection/MarketplaceSelect.tsx","nft/components/common/SortDropdown/FilterSortDropdown.tsx","nft/components/common/SortDropdown/index.tsx","nft/components/common/SortDropdown/SortDropdown.css.ts","nft/hooks/usePriceRange.ts","nft/utils/scrollToTop.ts","nft/utils/urlParams.ts","nft/components/collection/Sweep.tsx","nft/components/collection/TraitChip.tsx","nft/components/collection/CollectionNfts.tsx","nft/components/collection/CollectionSearch.tsx","nft/components/collection/CollectionSearch.css.ts","nft/utils/numbers.ts","nft/components/collection/CollectionStats.css.ts","nft/components/collection/CollectionStats.tsx","nft/components/collection/PriceRange.css.ts","nft/components/collection/TraitsHeader.tsx","nft/components/collection/PriceRange.tsx","nft/components/collection/TraitSelect.tsx","nft/components/collection/Filters.tsx","nft/components/collection/CollectionPageSkeleton.tsx","constants/supportArticles.ts","nft/components/collection/UnavailableCollectionPage.tsx","nft/pages/collection/index.tsx"],"sourcesContent":["import { Box } from 'nft/components/Box'\nimport { Column, Row } from 'nft/components/Flex'\nimport { body, bodySmall } from 'nft/css/common.css'\nimport { useBag } from 'nft/hooks'\nimport { useBagTotalEthPrice, useBagTotalUsdPrice } from 'nft/hooks/useBagTotalEthPrice'\nimport { roundAndPluralize } from 'nft/utils'\nimport { NumberType, useFormatter } from 'utils/formatNumbers'\n\nimport * as styles from './MobileHoverBag.css'\nexport const MobileHoverBag = () => {\n  const itemsInBag = useBag((state) => state.itemsInBag)\n  const toggleBag = useBag((state) => state.toggleBag)\n  const totalEthPrice = useBagTotalEthPrice()\n  const totalUsdPrice = useBagTotalUsdPrice()\n  const { formatEther, formatNumberOrString } = useFormatter()\n\n  const shouldShowBag = itemsInBag.length > 0\n\n  return (\n    <Row display={{ sm: shouldShowBag ? 'flex' : 'none', md: 'none' }} className={styles.bagContainer}>\n      <Row gap=\"8\">\n        <Box position=\"relative\" style={{ width: '34px', height: '34px' }}>\n          {itemsInBag.slice(0, 3).map((item, index) => {\n            return (\n              <Box\n                as=\"img\"\n                key={index}\n                position=\"absolute\"\n                src={item.asset.smallImageUrl}\n                top=\"1/2\"\n                left=\"1/2\"\n                width=\"26\"\n                height=\"26\"\n                borderRadius=\"4\"\n                style={{\n                  transform:\n                    index === 0\n                      ? 'translate(-50%, -50%) rotate(-4.42deg)'\n                      : index === 1\n                      ? 'translate(-50%, -50%) rotate(-14.01deg)'\n                      : 'translate(-50%, -50%) rotate(10.24deg)',\n                  zIndex: index,\n                }}\n              />\n            )\n          })}\n        </Box>\n        <Column>\n          <Box className={body} fontWeight=\"medium\">\n            {roundAndPluralize(itemsInBag.length, 'NFT')}\n          </Box>\n          <Row gap=\"8\">\n            <Box className={body}>\n              {`${formatEther({ input: totalEthPrice.toString(), type: NumberType.NFTToken })}`} ETH\n            </Box>\n            <Box color=\"neutral2\" className={bodySmall}>\n              {formatNumberOrString({ input: totalUsdPrice, type: NumberType.FiatNFTToken })}\n            </Box>\n          </Row>\n        </Column>\n      </Row>\n      <Box className={styles.viewBagButton} onClick={toggleBag}>\n        View bag\n      </Box>\n    </Row>\n  )\n}\n","import \"src/nft/css/sprinkles.css.ts.vanilla.css!=!../../../../node_modules/@vanilla-extract/webpack-plugin/virtualFileLoader/dist/vanilla-extract-webpack-plugin-virtualFileLoader.cjs.js?{\\\"fileName\\\":\\\"src/nft/css/sprinkles.css.ts.vanilla.css\\\",\\\"source\\\":\\\"#\\\"}!../../../../node_modules/@vanilla-extract/webpack-plugin/extracted.js\"\nimport \"src/nft/css/common.css.ts.vanilla.css!=!../../../../node_modules/@vanilla-extract/webpack-plugin/virtualFileLoader/dist/vanilla-extract-webpack-plugin-virtualFileLoader.cjs.js?{\\\"fileName\\\":\\\"src/nft/css/common.css.ts.vanilla.css\\\",\\\"source\\\":\\\"Ll8xZ25yNnJjYTo6YmVmb3JlIHsKICBjb250ZW50OiAiIjsKICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgaW5zZXQ6IC0xcHg7CiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDQ1ZGVnLCAjRkM3MkZGODAgMCUsICNGQzcyRkY4MCAxMDAuMTMlKSBib3JkZXItYm94OwogIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQ7CiAgLXdlYmtpdC1tYXNrOiBsaW5lYXItZ3JhZGllbnQoI2ZmZiAwIDApIHBhZGRpbmctYm94LCBsaW5lYXItZ3JhZGllbnQoI2ZmZiAwIDApOzsKICAtd2Via2l0LW1hc2stY29tcG9zaXRlOiB4b3I7OwogIG1hc2stY29tcG9zaXRlOiBleGNsdWRlOwogIGJvcmRlci1zdHlsZTogc29saWQ7CiAgYm9yZGVyLXdpZHRoOiAxcHg7CiAgYm9yZGVyLXJhZGl1czogaW5oZXJpdDsKICBwb2ludGVyLWV2ZW50czogbm9uZTsKfQouXzFnbnI2cmNiOjpiZWZvcmUgewogIG9wYWNpdHk6IDA7CiAgLXdlYmtpdC10cmFuc2l0aW9uOiBvcGFjaXR5IDAuMjVzIGVhc2U7CiAgLW1vei10cmFuc2l0aW9uOiBvcGFjaXR5IDAuMjVzIGVhc2U7CiAgLW1zLXRyYW5zaXRpb246IG9wYWNpdHkgMC4yNXMgZWFzZTsKICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuMjVzIGVhc2Utb3V0Owp9Ci5fMWducjZyY2I6aG92ZXI6OmJlZm9yZSB7CiAgb3BhY2l0eTogMTsKfQ==\\\"}!../../../../node_modules/@vanilla-extract/webpack-plugin/extracted.js\"\nexport var bagContainer = '_1xzbheq48r _1xzbheq32f _1xzbheq35l _1xzbheq3b3 _1xzbheq4ql _1xzbheq2tx _1xzbheq3qr _1xzbheq80p _1xzbheq7zp _1xzbheq55f _1xzbheq895 _1xzbheq48f';\nexport var viewBagButton = '_1xzbheqd9 _1xzbheqb9 _1xzbheqdx _1xzbheq2e9 _1xzbheq2jr _1xzbheq2of _1xzbheq27x _1xzbheq4df _1xzbheq6sl _1xzbheq80x _1xzbheq7zd';","import \"src/nft/css/sprinkles.css.ts.vanilla.css!=!../../../../node_modules/@vanilla-extract/webpack-plugin/virtualFileLoader/dist/vanilla-extract-webpack-plugin-virtualFileLoader.cjs.js?{\\\"fileName\\\":\\\"src/nft/css/sprinkles.css.ts.vanilla.css\\\",\\\"source\\\":\\\"#\\\"}!../../../../node_modules/@vanilla-extract/webpack-plugin/extracted.js\"\nimport \"src/nft/css/common.css.ts.vanilla.css!=!../../../../node_modules/@vanilla-extract/webpack-plugin/virtualFileLoader/dist/vanilla-extract-webpack-plugin-virtualFileLoader.cjs.js?{\\\"fileName\\\":\\\"src/nft/css/common.css.ts.vanilla.css\\\",\\\"source\\\":\\\"Ll8xZ25yNnJjYTo6YmVmb3JlIHsKICBjb250ZW50OiAiIjsKICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgaW5zZXQ6IC0xcHg7CiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDQ1ZGVnLCAjRkM3MkZGODAgMCUsICNGQzcyRkY4MCAxMDAuMTMlKSBib3JkZXItYm94OwogIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQ7CiAgLXdlYmtpdC1tYXNrOiBsaW5lYXItZ3JhZGllbnQoI2ZmZiAwIDApIHBhZGRpbmctYm94LCBsaW5lYXItZ3JhZGllbnQoI2ZmZiAwIDApOzsKICAtd2Via2l0LW1hc2stY29tcG9zaXRlOiB4b3I7OwogIG1hc2stY29tcG9zaXRlOiBleGNsdWRlOwogIGJvcmRlci1zdHlsZTogc29saWQ7CiAgYm9yZGVyLXdpZHRoOiAxcHg7CiAgYm9yZGVyLXJhZGl1czogaW5oZXJpdDsKICBwb2ludGVyLWV2ZW50czogbm9uZTsKfQouXzFnbnI2cmNiOjpiZWZvcmUgewogIG9wYWNpdHk6IDA7CiAgLXdlYmtpdC10cmFuc2l0aW9uOiBvcGFjaXR5IDAuMjVzIGVhc2U7CiAgLW1vei10cmFuc2l0aW9uOiBvcGFjaXR5IDAuMjVzIGVhc2U7CiAgLW1zLXRyYW5zaXRpb246IG9wYWNpdHkgMC4yNXMgZWFzZTsKICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuMjVzIGVhc2Utb3V0Owp9Ci5fMWducjZyY2I6aG92ZXI6OmJlZm9yZSB7CiAgb3BhY2l0eTogMTsKfQ==\\\"}!../../../../node_modules/@vanilla-extract/webpack-plugin/extracted.js\"\nimport \"src/nft/css/loading.css.ts.vanilla.css!=!../../../../node_modules/@vanilla-extract/webpack-plugin/virtualFileLoader/dist/vanilla-extract-webpack-plugin-virtualFileLoader.cjs.js?{\\\"fileName\\\":\\\"src/nft/css/loading.css.ts.vanilla.css\\\",\\\"source\\\":\\\"QGtleWZyYW1lcyBla2xhMW4wIHsKICAwJSB7CiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAxMDAlIDUwJTsKICB9CiAgMTAwJSB7CiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAwJSA1MCU7CiAgfQp9Ci5la2xhMW4xIHsKICBhbmltYXRpb246IGVrbGExbjAgMS41cyBpbmZpbml0ZTsKICBhbmltYXRpb24tZmlsbC1tb2RlOiBib3RoOwogIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCh0byBsZWZ0LCB2YXIoLS1fMXh6YmhlcTMpIDI1JSwgdmFyKC0tXzF4emJoZXE1KSA1MCUsIHZhcigtLV8xeHpiaGVxMykgNzUlKTsKICBiYWNrZ3JvdW5kLXNpemU6IDQwMCU7CiAgd2lsbC1jaGFuZ2U6IGJhY2tncm91bmQtcG9zaXRpb247Cn0KLmVrbGExbjMgewogIHVzZXItc2VsZWN0OiBub25lOwp9\\\"}!../../../../node_modules/@vanilla-extract/webpack-plugin/extracted.js\"\nimport \"src/nft/components/collection/ActivitySwitcher.css.ts.vanilla.css!=!../../../../node_modules/@vanilla-extract/webpack-plugin/virtualFileLoader/dist/vanilla-extract-webpack-plugin-virtualFileLoader.cjs.js?{\\\"fileName\\\":\\\"src/nft/components/collection/ActivitySwitcher.css.ts.vanilla.css\\\",\\\"source\\\":\\\"Ll8xaWM4MjBlMSB7CiAgbGluZS1oZWlnaHQ6IDI0cHg7Cn0KLl8xaWM4MjBlNTphZnRlciB7CiAgY29udGVudDogIiI7CiAgcG9zaXRpb246IGFic29sdXRlOwogIGJhY2tncm91bmQ6IHZhcigtLV8xeHpiaGVxMCk7CiAgd2lkdGg6IDEwMCU7CiAgaGVpZ2h0OiAycHg7CiAgbGVmdDogMHB4OwogIHJpZ2h0OiAwcHg7CiAgYm90dG9tOiAtOXB4Owp9Ci5fMWljODIwZTYgewogIHdpZHRoOiA1OHB4OwogIGhlaWdodDogMjBweDsKfQ==\\\"}!../../../../node_modules/@vanilla-extract/webpack-plugin/extracted.js\"\nexport var activitySwitcherToggle = '_1ic820e1 _1xzbheqd9 _1xzbheqbf _1xzbheqe3 _1xzbheq48x _1xzbheq4ux _1xzbheq88d _1xzbheq7zd _1xzbheqfx _1xzbheq4bf';\nexport var baseActivitySwitcherToggle = '_1ic820e1 _1xzbheqd9 _1xzbheqbf _1xzbheqe3 _1xzbheq48x _1xzbheq4ux _1xzbheq88d _1xzbheq7zd _1xzbheqfx';\nexport var selectedActivitySwitcherToggle = '_1ic820e5 _1ic820e1 _1xzbheqd9 _1xzbheqbf _1xzbheqe3 _1xzbheq48x _1xzbheq4ux _1xzbheq88d _1xzbheq7zd _1xzbheqfx _1xzbheq4b9';\nexport var styledLoading = '_1ic820e6 ekla1n3 ekla1n1 _1xzbheq80x _1xzbheq7z9 _1xzbheq4g3';","import { BrowserEvent, InterfaceElementName, NFTEventName } from '@uniswap/analytics-events'\nimport { TraceEvent } from 'analytics'\nimport { Box } from 'nft/components/Box'\nimport { Row } from 'nft/components/Flex'\nimport { useIsCollectionLoading } from 'nft/hooks'\nimport styled from 'styled-components'\n\nimport * as styles from './ActivitySwitcher.css'\n\nconst BaseActivityContainer = styled(Row)`\n  border-bottom: 1px solid;\n  border-color: ${({ theme }) => theme.surface3};\n  margin-right: 12px;\n`\n\nexport const ActivitySwitcherLoading = new Array(2)\n  .fill(null)\n  .map((_, index) => <div className={styles.styledLoading} key={`ActivitySwitcherLoading-key-${index}`} />)\n\nexport const ActivitySwitcher = ({\n  showActivity,\n  toggleActivity,\n}: {\n  showActivity: boolean\n  toggleActivity: () => void\n}) => {\n  const isLoading = useIsCollectionLoading((state) => state.isCollectionStatsLoading)\n\n  return (\n    <BaseActivityContainer gap=\"24\" marginBottom=\"16\">\n      {isLoading ? (\n        ActivitySwitcherLoading\n      ) : (\n        <>\n          <Box\n            as=\"button\"\n            className={showActivity ? styles.activitySwitcherToggle : styles.selectedActivitySwitcherToggle}\n            onClick={() => showActivity && toggleActivity()}\n          >\n            Items\n          </Box>\n          <TraceEvent\n            events={[BrowserEvent.onClick]}\n            element={InterfaceElementName.NFT_ACTIVITY_TAB}\n            name={NFTEventName.NFT_ACTIVITY_SELECTED}\n          >\n            <Box\n              as=\"button\"\n              className={!showActivity ? styles.activitySwitcherToggle : styles.selectedActivitySwitcherToggle}\n              onClick={() => !showActivity && toggleActivity()}\n              data-testid=\"nft-activity\"\n            >\n              Activity\n            </Box>\n          </TraceEvent>\n        </>\n      )}\n    </BaseActivityContainer>\n  )\n}\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { Trans } from '@lingui/macro'\nimport { InterfacePageName, NFTEventName } from '@uniswap/analytics-events'\nimport { sendAnalyticsEvent, useTrace } from 'analytics'\nimport { NftCard, NftCardDisplayProps } from 'nft/components/card'\nimport { Ranking as RankingContainer, Suspicious as SuspiciousContainer } from 'nft/components/card/icons'\nimport { useBag } from 'nft/hooks'\nimport { GenieAsset, UniformAspectRatio } from 'nft/types'\nimport { useCallback, useMemo } from 'react'\nimport { NumberType, useFormatter } from 'utils/formatNumbers'\n\ninterface CollectionAssetProps {\n  asset: GenieAsset\n  isMobile: boolean\n  mediaShouldBePlaying: boolean\n  setCurrentTokenPlayingMedia: (tokenId: string | undefined) => void\n  rarityVerified?: boolean\n  uniformAspectRatio: UniformAspectRatio\n  setUniformAspectRatio: (uniformAspectRatio: UniformAspectRatio) => void\n  renderedHeight?: number\n  setRenderedHeight: (renderedHeight: number | undefined) => void\n}\n\nexport const CollectionAsset = ({\n  asset,\n  isMobile,\n  mediaShouldBePlaying,\n  setCurrentTokenPlayingMedia,\n  uniformAspectRatio,\n  setUniformAspectRatio,\n  renderedHeight,\n  setRenderedHeight,\n}: CollectionAssetProps) => {\n  const { formatEther } = useFormatter()\n  const bagManuallyClosed = useBag((state) => state.bagManuallyClosed)\n  const addAssetsToBag = useBag((state) => state.addAssetsToBag)\n  const removeAssetsFromBag = useBag((state) => state.removeAssetsFromBag)\n  const itemsInBag = useBag((state) => state.itemsInBag)\n  const bagExpanded = useBag((state) => state.bagExpanded)\n  const setBagExpanded = useBag((state) => state.setBagExpanded)\n  const trace = useTrace({ page: InterfacePageName.NFT_COLLECTION_PAGE })\n\n  const { isSelected } = useMemo(() => {\n    const matchingItems = itemsInBag.filter(\n      (item) => asset.tokenId === item.asset.tokenId && asset.address === item.asset.address\n    )\n\n    const isSelected = matchingItems.length > 0\n    return {\n      isSelected,\n    }\n  }, [asset, itemsInBag])\n\n  const notForSale = asset.notForSale || BigNumber.from(asset.priceInfo ? asset.priceInfo.ETHPrice : 0).lt(0)\n  const provider = asset?.rarity?.providers ? asset.rarity.providers[0] : undefined\n  const handleAddAssetToBag = useCallback(() => {\n    if (BigNumber.from(asset.priceInfo?.ETHPrice ?? 0).gt(0)) {\n      addAssetsToBag([asset])\n      if (!bagExpanded && !isMobile && !bagManuallyClosed) {\n        setBagExpanded({ bagExpanded: true })\n      }\n      sendAnalyticsEvent(NFTEventName.NFT_BUY_ADDED, {\n        collection_address: asset.address,\n        token_id: asset.tokenId,\n        token_type: asset.tokenType,\n        ...trace,\n      })\n    }\n  }, [addAssetsToBag, asset, bagExpanded, bagManuallyClosed, isMobile, setBagExpanded, trace])\n\n  const handleRemoveAssetFromBag = useCallback(() => {\n    removeAssetsFromBag([asset])\n  }, [asset, removeAssetsFromBag])\n\n  const display: NftCardDisplayProps = useMemo(() => {\n    return {\n      primaryInfo: asset.name ? asset.name : `#${asset.tokenId}`,\n      primaryInfoIcon: asset.susFlag ? <SuspiciousContainer /> : null,\n      primaryInfoRight: asset.rarity && provider ? <RankingContainer provider={provider} /> : null,\n      secondaryInfo: notForSale\n        ? ''\n        : `${formatEther({ input: asset.priceInfo.ETHPrice, type: NumberType.NFTToken })} ETH`,\n      selectedInfo: <Trans>Remove from bag</Trans>,\n      notSelectedInfo: <Trans>Add to bag</Trans>,\n      disabledInfo: <Trans>Not listed</Trans>,\n    }\n  }, [\n    asset.name,\n    asset.priceInfo.ETHPrice,\n    asset.rarity,\n    asset.susFlag,\n    asset.tokenId,\n    formatEther,\n    notForSale,\n    provider,\n  ])\n\n  return (\n    <NftCard\n      asset={asset}\n      display={display}\n      isSelected={isSelected}\n      isDisabled={Boolean(asset.notForSale)}\n      selectAsset={handleAddAssetToBag}\n      unselectAsset={handleRemoveAssetFromBag}\n      mediaShouldBePlaying={mediaShouldBePlaying}\n      uniformAspectRatio={uniformAspectRatio}\n      setUniformAspectRatio={setUniformAspectRatio}\n      renderedHeight={renderedHeight}\n      setRenderedHeight={setRenderedHeight}\n      setCurrentTokenPlayingMedia={setCurrentTokenPlayingMedia}\n      testId=\"nft-collection-asset\"\n    />\n  )\n}\n","import { create } from 'zustand'\nimport { devtools } from 'zustand/middleware'\n\ninterface traitOpen {\n  [key: number]: boolean\n}\n\ninterface TraitsOpenState {\n  traitsOpen: traitOpen\n  setTraitsOpen: (index: number, isOpen: boolean) => void\n}\n\nexport enum TraitPosition {\n  MARKPLACE_INDEX = 0,\n  PRICE_RANGE_INDEX = 1,\n  TRAIT_START_INDEX = 2,\n}\n\nexport const useTraitsOpen = create<TraitsOpenState>()(\n  devtools(\n    (set) => ({\n      traitsOpen: {},\n      setTraitsOpen: (index, isOpen) => {\n        set(({ traitsOpen }) => ({ traitsOpen: { ...traitsOpen, [index]: isOpen } }))\n      },\n    }),\n    { name: 'useTraitsOpen' }\n  )\n)\n","import \"src/nft/css/sprinkles.css.ts.vanilla.css!=!../../../../node_modules/@vanilla-extract/webpack-plugin/virtualFileLoader/dist/vanilla-extract-webpack-plugin-virtualFileLoader.cjs.js?{\\\"fileName\\\":\\\"src/nft/css/sprinkles.css.ts.vanilla.css\\\",\\\"source\\\":\\\"#\\\"}!../../../../node_modules/@vanilla-extract/webpack-plugin/extracted.js\"\nimport \"src/nft/components/collection/Filters.css.ts.vanilla.css!=!../../../../node_modules/@vanilla-extract/webpack-plugin/virtualFileLoader/dist/vanilla-extract-webpack-plugin-virtualFileLoader.cjs.js?{\\\"fileName\\\":\\\"src/nft/components/collection/Filters.css.ts.vanilla.css\\\",\\\"source\\\":\\\"Ll8xbGRyYWF2MSB7CiAgd2lkdGg6IDMwOHB4OwogIHBhZGRpbmctcmlnaHQ6IDhweDsKICBwYWRkaW5nLWJvdHRvbTogOTZweDsKfQouXzFsZHJhYXYxOjotd2Via2l0LXNjcm9sbGJhciB7CiAgZGlzcGxheTogbm9uZTsKfQouXzFsZHJhYXYyOmhvdmVyIHsKICBiYWNrZ3JvdW5kOiB2YXIoLS1nZW5pZS1jb2xvcnMtc3VyZmFjZTMpOwogIGJvcmRlci1yYWRpdXM6IDEycHg7Cn0KLl8xbGRyYWF2NTpob3ZlciB7CiAgYmFja2dyb3VuZDogdmFyKC0tZ2VuaWUtY29sb3JzLXN1cmZhY2UzKTsKfQouXzFsZHJhYXZiIHsKICBtYXgtaGVpZ2h0OiAzMDJweDsKICBzY3JvbGxiYXItd2lkdGg6IG5vbmU7Cn0KLl8xbGRyYWF2Yjo6LXdlYmtpdC1zY3JvbGxiYXIgewogIGRpc3BsYXk6IG5vbmU7Cn0KLl8xbGRyYWF2YyB7CiAgbWFyZ2luLWxlZnQ6IC0xcHg7Cn0KLl8xbGRyYWF2ZSB7CiAgbWFyZ2luLXJpZ2h0OiAtMXB4Owp9CkBtZWRpYSAobWF4LXdpZHRoOiA2MzlweCkgewogIC5fMWxkcmFhdjEgewogICAgd2lkdGg6IGF1dG87CiAgICBoZWlnaHQ6IGF1dG87CiAgICBwYWRkaW5nLWJvdHRvbTogMHB4OwogIH0KfQ==\\\"}!../../../../node_modules/@vanilla-extract/webpack-plugin/extracted.js\"\nexport var MAX_FILTER_DROPDOWN_HEIGHT = 302;\nexport var borderBottom = '_1xzbheq805 _1xzbheq5yr _1xzbheq89x';\nexport var borderTop = '_1xzbheq80d _1xzbheq6df _1xzbheq8ap';\nexport var chevronContainer = '_1ldraave _1xzbheq4bf _1xzbheq453 _1xzbheq19r _1xzbheq12r _1xzbheq8e1';\nexport var chevronIcon = '_1ldraavc';\nexport var container = '_1ldraav1 _1xzbheq8bx _1xzbheq1ef _1xzbheq2o3 _1xzbheqlf _1xzbheqng';\nexport var detailsOpen = '_1xzbheq80d _1xzbheq6df _1xzbheq8ap _1xzbheq8bh _1xzbheqvx _1xzbheqff';\nexport var filterDropDowns = '_1ldraavb _1xzbheq805 _1xzbheq5yr _1xzbheq89x _1xzbheq2cl _1xzbheq27x';\nexport var row = '_1xzbheq44r _1xzbheq2jl _1xzbheq7zd _1xzbheqbf _1xzbheqe3 _1xzbheq48f _1xzbheq3x _1xzbheq2dr _1xzbheq2ol _1xzbheq283';\nexport var rowHover = '_1ldraav2';\nexport var subRowHover = '_1ldraav5';","import { NFTEventName, NFTFilterTypes } from '@uniswap/analytics-events'\nimport { sendAnalyticsEvent } from 'analytics'\nimport clsx from 'clsx'\nimport { Box } from 'nft/components/Box'\nimport * as styles from 'nft/components/collection/Filters.css'\nimport { Column, Row } from 'nft/components/Flex'\nimport { ChevronUpIcon } from 'nft/components/icons'\nimport { subheadSmall } from 'nft/css/common.css'\nimport { useCollectionFilters } from 'nft/hooks/useCollectionFilters'\nimport { TraitPosition, useTraitsOpen } from 'nft/hooks/useTraitsOpen'\nimport { getMarketplaceIcon } from 'nft/utils'\nimport { FormEvent, useEffect, useMemo, useReducer, useState } from 'react'\nimport styled from 'styled-components'\nimport { ThemedText } from 'theme/components'\n\nimport { Checkbox } from '../layout/Checkbox'\n\nconst FilterItemWrapper = styled(Row)`\n  justify-content: space-between;\n  padding: 10px 16px 10px 12px;\n  cursor: pointer;\n  border-radius: 12px;\n  &:hover {\n    background: ${({ theme }) => theme.surface2};\n  }\n`\n\nconst MarketNameWrapper = styled(Row)`\n  gap: 10px;\n`\n\nexport const MARKETPLACE_ITEMS = {\n  x2y2: 'X2Y2',\n  opensea: 'OpenSea',\n  looksrare: 'LooksRare',\n  sudoswap: 'SudoSwap',\n\n  nftx: 'NFTX',\n  nft20: 'NFT20',\n  cryptopunks: 'LarvaLabs',\n}\n\nexport const FilterItem = ({\n  title,\n  element,\n  onClick,\n}: {\n  title: string | JSX.Element\n  element: JSX.Element\n  onClick: React.MouseEventHandler<HTMLElement>\n}) => {\n  return (\n    <FilterItemWrapper onClick={onClick}>\n      <ThemedText.BodyPrimary>{title}</ThemedText.BodyPrimary>\n      <ThemedText.SubHeaderSmall>{element}</ThemedText.SubHeaderSmall>\n    </FilterItemWrapper>\n  )\n}\n\nconst MarketplaceItem = ({\n  title,\n  value,\n  addMarket,\n  removeMarket,\n  isMarketSelected,\n  count,\n}: {\n  title: string\n  value: string\n  addMarket: (market: string) => void\n  removeMarket: (market: string) => void\n  isMarketSelected: boolean\n  count?: number\n}) => {\n  const [isCheckboxSelected, setCheckboxSelected] = useState(false)\n  const [hovered, toggleHover] = useReducer((state) => !state, false)\n  useEffect(() => {\n    setCheckboxSelected(isMarketSelected)\n  }, [isMarketSelected])\n  const handleCheckbox = (e: FormEvent) => {\n    e.preventDefault()\n    if (!isCheckboxSelected) {\n      addMarket(value)\n      setCheckboxSelected(true)\n    } else {\n      removeMarket(value)\n      setCheckboxSelected(false)\n    }\n    sendAnalyticsEvent(NFTEventName.NFT_FILTER_SELECTED, { filter_type: NFTFilterTypes.MARKETPLACE })\n  }\n\n  const checkbox = (\n    <Checkbox checked={isCheckboxSelected} hovered={hovered} onChange={handleCheckbox}>\n      <Box as=\"span\" color=\"neutral2\" marginLeft=\"4\" paddingRight=\"12\">\n        {count}\n      </Box>\n    </Checkbox>\n  )\n\n  const titleWithLogo = (\n    <MarketNameWrapper>\n      {getMarketplaceIcon(title, '16')}\n      {title}\n    </MarketNameWrapper>\n  )\n\n  return (\n    <div key={value} onMouseEnter={toggleHover} onMouseLeave={toggleHover}>\n      <FilterItem title={titleWithLogo} element={checkbox} onClick={handleCheckbox} />\n    </div>\n  )\n}\n\nexport const FilterDropdown = ({\n  title,\n  items,\n  onClick,\n  isOpen,\n}: {\n  title: string\n  items: JSX.Element[]\n  onClick: React.MouseEventHandler<HTMLElement>\n  isOpen: boolean\n}) => {\n  return (\n    <>\n      <Box className={styles.detailsOpen} opacity={isOpen ? '1' : '0'} />\n      <Box\n        as=\"details\"\n        className={clsx(subheadSmall, !isOpen && styles.rowHover)}\n        open={isOpen}\n        borderRadius={isOpen ? '0' : '12'}\n      >\n        <Box\n          as=\"summary\"\n          className={`${styles.row} ${styles.rowHover}`}\n          display=\"flex\"\n          justifyContent=\"space-between\"\n          alignItems=\"center\"\n          fontSize=\"16\"\n          paddingTop=\"12\"\n          paddingLeft=\"12\"\n          paddingBottom=\"12\"\n          lineHeight=\"20\"\n          borderRadius=\"12\"\n          maxHeight=\"48\"\n          onClick={onClick}\n        >\n          {title}\n          <Box display=\"flex\" alignItems=\"center\">\n            <Box\n              className={styles.chevronContainer}\n              style={{\n                transform: `rotate(${isOpen ? 0 : 180}deg)`,\n              }}\n            >\n              <ChevronUpIcon className={styles.chevronIcon} />\n            </Box>\n          </Box>\n        </Box>\n        <Column className={styles.filterDropDowns} paddingBottom=\"8\" paddingLeft=\"0\">\n          {items}\n        </Column>\n      </Box>\n    </>\n  )\n}\n\nexport const MarketplaceSelect = () => {\n  const {\n    addMarket,\n    removeMarket,\n    markets: selectedMarkets,\n    marketCount,\n  } = useCollectionFilters(({ markets, marketCount, removeMarket, addMarket }) => ({\n    markets,\n    marketCount,\n    removeMarket,\n    addMarket,\n  }))\n\n  const [isOpen, setOpen] = useState(!!selectedMarkets.length)\n  const setTraitsOpen = useTraitsOpen((state) => state.setTraitsOpen)\n\n  const MarketplaceItems = useMemo(\n    () =>\n      Object.entries(MARKETPLACE_ITEMS).map(([value, title]) => (\n        <MarketplaceItem\n          key={value}\n          title={title}\n          value={value}\n          count={marketCount?.[value] || 0}\n          {...{ addMarket, removeMarket, isMarketSelected: selectedMarkets.includes(value) }}\n        />\n      )),\n    [addMarket, marketCount, removeMarket, selectedMarkets]\n  )\n\n  const onClick: React.MouseEventHandler<HTMLElement> = (e) => {\n    e.preventDefault()\n    setOpen(!isOpen)\n    setTraitsOpen(TraitPosition.MARKPLACE_INDEX, !isOpen)\n  }\n\n  return <FilterDropdown title=\"Marketplaces\" items={MarketplaceItems} onClick={onClick} isOpen={isOpen} />\n}\n","import { FilterDropdown, FilterItem } from 'nft/components/collection/MarketplaceSelect'\nimport { useCollectionFilters } from 'nft/hooks'\nimport { DropDownOption } from 'nft/types'\nimport { useState } from 'react'\nimport { Check } from 'react-feather'\nimport styled from 'styled-components'\n\nconst CheckIcon = styled(Check)`\n  height: 20px;\n  width: 20px;\n  color: ${({ theme }) => theme.accent1};\n`\n\nexport const FilterSortDropdown = ({ sortDropDownOptions }: { sortDropDownOptions: DropDownOption[] }) => {\n  const [isOpen, setOpen] = useState(false)\n  const onClick: React.MouseEventHandler<HTMLElement> = (e) => {\n    e.preventDefault()\n    setOpen(!isOpen)\n  }\n  const sortItems = sortDropDownOptions.map((option) => (\n    <SortByItem dropDownOption={option} parentOnClick={onClick} key={option.displayText} />\n  ))\n  return <FilterDropdown title=\"Sort by\" items={sortItems} onClick={onClick} isOpen={isOpen} />\n}\n\nconst SortByItem = ({\n  dropDownOption,\n  parentOnClick,\n}: {\n  dropDownOption: DropDownOption\n  parentOnClick: React.MouseEventHandler<HTMLElement>\n}) => {\n  const sortBy = useCollectionFilters((state) => state.sortBy)\n  const checkMark = dropDownOption.sortBy !== undefined && sortBy === dropDownOption.sortBy ? <CheckIcon /> : <></>\n  const onClick: React.MouseEventHandler<HTMLElement> = (e) => {\n    e.preventDefault()\n    parentOnClick(e)\n    dropDownOption.onClick()\n  }\n  return <FilterItem title={dropDownOption.displayText} element={checkMark} onClick={onClick} />\n}\n","import clsx from 'clsx'\nimport { useOnClickOutside } from 'hooks/useOnClickOutside'\nimport { Box } from 'nft/components/Box'\nimport { Row } from 'nft/components/Flex'\nimport { ArrowsIcon, ChevronUpIcon, ReversedArrowsIcon } from 'nft/components/icons'\nimport { buttonTextMedium } from 'nft/css/common.css'\nimport { themeVars } from 'nft/css/sprinkles.css'\nimport { useCollectionFilters, useIsCollectionLoading } from 'nft/hooks'\nimport { DropDownOption } from 'nft/types'\nimport { useEffect, useLayoutEffect, useMemo, useReducer, useRef, useState } from 'react'\n\nimport * as styles from './SortDropdown.css'\n\nexport { FilterSortDropdown } from './FilterSortDropdown'\n\nexport const SortDropdown = ({\n  dropDownOptions,\n  inFilters,\n  mini,\n  miniPrompt,\n  top,\n  left,\n}: {\n  dropDownOptions: DropDownOption[]\n  inFilters?: boolean\n  mini?: boolean\n  miniPrompt?: string\n  top?: number\n  left?: number\n}) => {\n  const sortBy = useCollectionFilters((state) => state.sortBy)\n  const [isOpen, toggleOpen] = useReducer((s) => !s, false)\n  const [isReversed, toggleReversed] = useReducer((s) => !s, false)\n  const [selectedIndex, setSelectedIndex] = useState(sortBy)\n  const isCollectionStatsLoading = useIsCollectionLoading((state) => state.isCollectionStatsLoading)\n\n  const [maxWidth, setMaxWidth] = useState(0)\n\n  useEffect(() => {\n    setSelectedIndex(sortBy)\n  }, [sortBy])\n\n  const ref = useRef<HTMLDivElement>(null)\n  useOnClickOutside(ref, () => isOpen && toggleOpen())\n\n  useEffect(() => setMaxWidth(0), [dropDownOptions])\n\n  const reversable = useMemo(\n    () => dropDownOptions[selectedIndex].reverseOnClick || dropDownOptions[selectedIndex].reverseIndex,\n    [selectedIndex, dropDownOptions]\n  )\n\n  const width = isCollectionStatsLoading ? 220 : inFilters ? 'full' : mini ? 'min' : maxWidth ? maxWidth : '300px'\n\n  return (\n    <Box\n      ref={ref}\n      borderRadius=\"12\"\n      borderBottomLeftRadius={isOpen ? '0' : undefined}\n      borderBottomRightRadius={isOpen ? '0' : undefined}\n      style={{ width }}\n    >\n      <Box\n        as=\"button\"\n        borderRadius=\"12\"\n        borderStyle=\"solid\"\n        background={mini ? 'none' : 'surface1'}\n        borderColor=\"surface3\"\n        borderWidth=\"1px\"\n        borderBottomLeftRadius={isOpen ? '0' : undefined}\n        borderBottomRightRadius={isOpen ? '0' : undefined}\n        padding={inFilters ? '12' : mini ? '0' : '8'}\n        color=\"neutral1\"\n        whiteSpace=\"nowrap\"\n        display=\"flex\"\n        justifyContent=\"space-between\"\n        height=\"44\"\n        alignItems=\"center\"\n        width={inFilters ? 'full' : 'inherit'}\n        onClick={toggleOpen}\n        cursor=\"pointer\"\n        className={isCollectionStatsLoading ? styles.isLoadingDropdown : clsx(isOpen && !mini && styles.activeDropdown)}\n      >\n        {!isCollectionStatsLoading && (\n          <>\n            <Box display=\"flex\" alignItems=\"center\" color=\"neutral1\">\n              {!isOpen && reversable && (\n                <Row\n                  marginRight=\"4\"\n                  onClick={(e) => {\n                    e.stopPropagation()\n\n                    if (dropDownOptions[selectedIndex].reverseOnClick) {\n                      dropDownOptions[selectedIndex].reverseOnClick?.()\n                      toggleReversed()\n                    } else {\n                      const dropdownIndex = dropDownOptions[selectedIndex].reverseIndex ?? 1\n                      dropDownOptions[dropdownIndex - 1].onClick()\n                      setSelectedIndex(dropdownIndex - 1)\n                    }\n                  }}\n                >\n                  {dropDownOptions[selectedIndex].reverseOnClick &&\n                    (isReversed ? <ArrowsIcon /> : <ReversedArrowsIcon />)}\n                  {dropDownOptions[selectedIndex].reverseIndex &&\n                    (selectedIndex > (dropDownOptions[selectedIndex].reverseIndex ?? 1) - 1 ? (\n                      <ArrowsIcon />\n                    ) : (\n                      <ReversedArrowsIcon />\n                    ))}\n                </Row>\n              )}\n\n              <Box\n                marginLeft={reversable ? '4' : '0'}\n                marginRight={mini ? '2' : '0'}\n                color=\"neutral1\"\n                className={buttonTextMedium}\n              >\n                {mini ? miniPrompt : isOpen ? 'Sort by' : dropDownOptions[selectedIndex].displayText}\n              </Box>\n            </Box>\n            <ChevronUpIcon\n              secondaryColor={mini ? themeVars.colors.neutral1 : undefined}\n              secondaryWidth={mini ? '20' : undefined}\n              secondaryHeight={mini ? '20' : undefined}\n              style={{\n                transform: isOpen ? '' : 'rotate(180deg)',\n              }}\n            />\n          </>\n        )}\n      </Box>\n      <Box\n        position=\"absolute\"\n        zIndex=\"3\"\n        width={inFilters ? 'auto' : 'inherit'}\n        right={inFilters ? '16' : 'auto'}\n        paddingBottom=\"8\"\n        fontSize=\"14\"\n        background=\"surface1\"\n        borderStyle=\"solid\"\n        borderColor=\"surface3\"\n        borderWidth=\"1px\"\n        borderRadius=\"8\"\n        borderTopLeftRadius={mini ? undefined : '0'}\n        borderTopRightRadius={mini ? undefined : '0'}\n        overflowY=\"hidden\"\n        transition=\"250\"\n        display={isOpen || !maxWidth ? 'block' : 'none'}\n        visibility={maxWidth ? 'visible' : 'hidden'}\n        marginTop={mini ? '12' : '0'}\n        className={clsx(!mini && styles.activeDropDownItems)}\n        style={{\n          top: top ? `${top}px` : 'inherit',\n          left: inFilters ? '16px' : left ? `${left}px` : 'inherit',\n        }}\n      >\n        {!maxWidth\n          ? [\n              dropDownOptions.reduce((acc, curr) => {\n                return curr.displayText.length >= acc.displayText.length ? curr : acc\n              }, dropDownOptions[0]),\n            ].map((option, index) => {\n              return <LargestItem key={index} option={option} index={index} setMaxWidth={setMaxWidth} />\n            })\n          : isOpen &&\n            dropDownOptions.map((option, index) => {\n              return (\n                <DropDownItem\n                  key={index}\n                  option={option}\n                  index={index}\n                  mini={mini}\n                  onClick={() => {\n                    dropDownOptions[index].onClick()\n                    setSelectedIndex(index)\n                    toggleOpen()\n                    isReversed && toggleReversed()\n                  }}\n                />\n              )\n            })}\n      </Box>\n    </Box>\n  )\n}\n\nconst DropDownItem = ({\n  option,\n  index,\n  onClick,\n  mini,\n}: {\n  option: DropDownOption\n  index: number\n  onClick?: () => void\n  mini?: boolean\n}) => {\n  return (\n    <Box\n      as=\"button\"\n      border=\"none\"\n      key={index}\n      display=\"flex\"\n      alignItems=\"center\"\n      paddingTop=\"10\"\n      paddingBottom=\"10\"\n      paddingLeft=\"12\"\n      paddingRight={mini ? '20' : '0'}\n      width=\"full\"\n      background={{\n        default: 'surface1',\n        hover: 'surface3',\n      }}\n      color=\"neutral1\"\n      onClick={onClick}\n      cursor=\"pointer\"\n    >\n      <Box marginLeft=\"8\" className={buttonTextMedium}>\n        {option.displayText}\n      </Box>\n    </Box>\n  )\n}\n\nconst MAX_PADDING = 52\n\nconst LargestItem = ({\n  option,\n  index,\n  setMaxWidth,\n}: {\n  option: DropDownOption\n  index: number\n  setMaxWidth: (width: number) => void\n}) => {\n  const maxWidthRef = useRef<HTMLDivElement>(null)\n\n  useLayoutEffect(() => {\n    if (maxWidthRef && maxWidthRef.current) {\n      setMaxWidth(Math.ceil(maxWidthRef.current.getBoundingClientRect().width) + MAX_PADDING)\n    }\n  })\n\n  return (\n    <Box key={index} position=\"absolute\" ref={maxWidthRef}>\n      <DropDownItem option={option} index={index} />\n    </Box>\n  )\n}\n","import \"src/nft/css/sprinkles.css.ts.vanilla.css!=!../../../../../node_modules/@vanilla-extract/webpack-plugin/virtualFileLoader/dist/vanilla-extract-webpack-plugin-virtualFileLoader.cjs.js?{\\\"fileName\\\":\\\"src/nft/css/sprinkles.css.ts.vanilla.css\\\",\\\"source\\\":\\\"#\\\"}!../../../../../node_modules/@vanilla-extract/webpack-plugin/extracted.js\"\nimport \"src/nft/css/loading.css.ts.vanilla.css!=!../../../../../node_modules/@vanilla-extract/webpack-plugin/virtualFileLoader/dist/vanilla-extract-webpack-plugin-virtualFileLoader.cjs.js?{\\\"fileName\\\":\\\"src/nft/css/loading.css.ts.vanilla.css\\\",\\\"source\\\":\\\"QGtleWZyYW1lcyBla2xhMW4wIHsKICAwJSB7CiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAxMDAlIDUwJTsKICB9CiAgMTAwJSB7CiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAwJSA1MCU7CiAgfQp9Ci5la2xhMW4xIHsKICBhbmltYXRpb246IGVrbGExbjAgMS41cyBpbmZpbml0ZTsKICBhbmltYXRpb24tZmlsbC1tb2RlOiBib3RoOwogIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCh0byBsZWZ0LCB2YXIoLS1fMXh6YmhlcTMpIDI1JSwgdmFyKC0tXzF4emJoZXE1KSA1MCUsIHZhcigtLV8xeHpiaGVxMykgNzUlKTsKICBiYWNrZ3JvdW5kLXNpemU6IDQwMCU7CiAgd2lsbC1jaGFuZ2U6IGJhY2tncm91bmQtcG9zaXRpb247Cn0KLmVrbGExbjMgewogIHVzZXItc2VsZWN0OiBub25lOwp9\\\"}!../../../../../node_modules/@vanilla-extract/webpack-plugin/extracted.js\"\nimport \"src/nft/components/common/SortDropdown/SortDropdown.css.ts.vanilla.css!=!../../../../../node_modules/@vanilla-extract/webpack-plugin/virtualFileLoader/dist/vanilla-extract-webpack-plugin-virtualFileLoader.cjs.js?{\\\"fileName\\\":\\\"src/nft/components/common/SortDropdown/SortDropdown.css.ts.vanilla.css\\\",\\\"source\\\":\\\"LnR2cWxoMjAgewogIGJvcmRlci1ib3R0b206IG5vbmU7Cn0KLnR2cWxoMjEgewogIGJvcmRlci10b3A6IG5vbmU7Cn0KLnR2cWxoMjMgewogIHdpZHRoOiAyMjBweDsKfQ==\\\"}!../../../../../node_modules/@vanilla-extract/webpack-plugin/extracted.js\"\nexport var activeDropDownItems = 'tvqlh21';\nexport var activeDropdown = 'tvqlh20';\nexport var isLoadingDropdown = 'tvqlh23 ekla1n3 ekla1n1 _1xzbheq80x _1xzbheq7z9 _1xzbheq4g3 _1xzbheq1al';","import { create } from 'zustand'\nimport { devtools } from 'zustand/middleware'\n\ninterface PriceRangeProps {\n  priceRangeLow: string\n  setPriceRangeLow: (priceRangeLow: string) => void\n  priceRangeHigh: string\n  setPriceRangeHigh: (priceRangeHigh: string) => void\n  prevMinMax: Array<number>\n  setPrevMinMax: (prevMinMax: Array<number>) => void\n}\n\nexport const usePriceRange = create<PriceRangeProps>()(\n  devtools(\n    (set) => ({\n      priceRangeLow: '',\n      setPriceRangeLow: (priceRangeLow: string) => {\n        set(() => {\n          return { priceRangeLow }\n        })\n      },\n      priceRangeHigh: '',\n      setPriceRangeHigh: (priceRangeHigh: string) => {\n        set(() => {\n          return { priceRangeHigh }\n        })\n      },\n      prevMinMax: [0, 100],\n      setPrevMinMax: (prevMinMax: Array<number>) => {\n        set(() => {\n          return { prevMinMax }\n        })\n      },\n    }),\n    { name: 'usePriceRange' }\n  )\n)\n","import { breakpoints } from 'nft/css/sprinkles.css'\nconst isClient = typeof window !== 'undefined'\n\nfunction getIsMobile() {\n  return isClient ? window.innerWidth < breakpoints.sm : false\n}\n\nexport const scrollToTop = () => {\n  const isMobile = getIsMobile()\n  const anchorElement = isMobile ? 'nft-anchor-mobile' : 'nft-anchor'\n\n  window.document.getElementById(anchorElement)?.scrollIntoView({\n    behavior: 'smooth',\n  })\n}\n","import { CollectionFilters, initialCollectionFilterState, SortByPointers, Trait } from 'nft/hooks'\nimport { GenieCollection } from 'nft/types'\nimport qs from 'query-string'\nimport { Location } from 'react-router-dom'\n\nconst trimTraitStr = (trait: string) => {\n  return trait.substring(1, trait.length - 1)\n}\n\nconst urlParamsUtils = {\n  removeDefaults: (query: Record<string, any>) => {\n    const clonedQuery: Record<string, any> = { ...query }\n\n    // Leveraging default values & not showing them on URL\n    for (const key in clonedQuery) {\n      const valueInQuery = clonedQuery[key]\n      const initialValue = initialCollectionFilterState[key as keyof typeof initialCollectionFilterState]\n\n      if (JSON.stringify(valueInQuery) === JSON.stringify(initialValue)) {\n        delete clonedQuery[key]\n      }\n    }\n\n    // Doing this one manually due to name mismatch - \"all\" in url, \"buyNow\" in state\n    if (clonedQuery['all'] !== initialCollectionFilterState.buyNow) {\n      delete clonedQuery['all']\n    }\n\n    const defaultSortByPointer = SortByPointers[initialCollectionFilterState.sortBy]\n    if (clonedQuery['sort'] === defaultSortByPointer) {\n      delete clonedQuery['sort']\n    }\n\n    return clonedQuery\n  },\n\n  // Making values in our URL more state-friendly\n  buildQuery: (query: Record<string, any>, collectionStats: GenieCollection) => {\n    const clonedQuery: Record<string, any> = { ...query }\n    const filters = ['traits', 'markets']\n\n    filters.forEach((key) => {\n      if (!clonedQuery[key]) {\n        clonedQuery[key] = []\n      }\n\n      // query-string package treats arrays with one value as a string.\n      // Here we're making sure that we have an array, not a string. Example:\n      //   const foo = 'hey' // => ['hey']\n      if (clonedQuery[key] && typeof clonedQuery[key] === 'string') {\n        clonedQuery[key] = [clonedQuery[key]]\n      }\n    })\n\n    try {\n      const { buyNow: initialBuyNow, search: initialSearchText } = initialCollectionFilterState\n\n      Object.entries(SortByPointers).forEach(([key, value]) => {\n        if (value === clonedQuery['sort']) {\n          clonedQuery['sortBy'] = Number(key)\n        }\n      })\n\n      clonedQuery['buyNow'] = !(clonedQuery['all'] === undefined ? !initialBuyNow : clonedQuery['all'])\n      clonedQuery['search'] = clonedQuery['search'] === undefined ? initialSearchText : String(clonedQuery['search'])\n\n      // Handling an edge case caused by query-string's bad array parsing, when user\n      // only selects one trait and reloads the page.\n      // Here's the general data-structure for our traits in URL:\n      //   `traits=(\"trait_type\",\"trait_value\"),(\"trait_type\",\"trait_value\")`\n      //\n      // Expected behavior: When user selects one trait, there should be an array\n      // containing one element.\n      //\n      // Actual behavior: It creates an array with two elements, first element being\n      // trait_type & the other trait_value. This causes confusion since we don't know\n      // whether user has selected two traits (cause we have two elements in our array)\n      // or it's only one.\n      //\n      // Using this block of code, we'll identify if that's the case.\n      if (clonedQuery['traits'].length === 2) {\n        const [trait_type, trait_value] = clonedQuery['traits'] as [string, string]\n        const fullTrait = `${trait_type}${trait_value}`\n        if (!fullTrait.includes(',')) {\n          if (\n            trait_type.startsWith('(') &&\n            !trait_type.endsWith(')') &&\n            trait_value.endsWith(')') &&\n            !trait_value.startsWith('(')\n          )\n            clonedQuery['traits'] = [`${trait_type},${trait_value}`]\n        }\n      }\n\n      clonedQuery['traits'] = clonedQuery['traits'].map((queryTrait: string) => {\n        const modifiedTrait = trimTraitStr(queryTrait.replace(/(\")/g, ''))\n        const [trait_type, trait_value] = modifiedTrait.split(',')\n        const traitInStats =\n          collectionStats.traits &&\n          collectionStats.traits[trait_type].find((trait) => trait.trait_value === trait_value)\n\n        // For most cases, `traitInStats` is assigned. In case the trait\n        // does not exist in our store, e.g \"Number of traits\", we have to\n        // manually create an object for it.\n        const trait = traitInStats ?? { trait_type, trait_value, trait_count: 0 }\n\n        return trait as Trait\n      })\n    } catch (err) {\n      clonedQuery['traits'] = []\n    }\n\n    return clonedQuery\n  },\n}\n\nexport const syncLocalFiltersWithURL = (state: CollectionFilters) => {\n  const urlFilterItems = [\n    'markets',\n    'maxPrice',\n    'maxRarity',\n    'minPrice',\n    'minRarity',\n    'traits',\n    'all',\n    'search',\n    'sort',\n  ] as const\n\n  const query: Record<string, any> = {}\n  urlFilterItems.forEach((key) => {\n    switch (key) {\n      case 'traits': {\n        const traits = state.traits.map(({ trait_type, trait_value }) => `(\"${trait_type}\",\"${trait_value}\")`)\n        query['traits'] = traits\n        break\n      }\n      case 'all':\n        query['all'] = !state.buyNow\n        break\n\n      case 'sort':\n        query['sort'] = SortByPointers[state.sortBy]\n        break\n\n      default:\n        query[key] = state[key]\n        break\n    }\n  })\n\n  const modifiedQuery = urlParamsUtils.removeDefaults(query)\n\n  // Applying local state changes to URL\n  const url = window.location.href.split('?')[0]\n  const stringifiedQuery = qs.stringify(modifiedQuery, { arrayFormat: 'comma' })\n\n  // Using window.history directly on purpose here. router.push() will trigger re-renders & API calls.\n  window.history.replaceState({}, ``, `${url}${stringifiedQuery && `?${stringifiedQuery}`}`)\n}\n\nexport const applyFiltersFromURL = (location: Location, collectionStats: GenieCollection) => {\n  if (!location.search) return\n\n  const query = qs.parse(location.search, {\n    arrayFormat: 'comma',\n    parseNumbers: true,\n    parseBooleans: true,\n  }) as {\n    maxPrice: string\n    maxRarity: string\n    minPrice: string\n    minRarity: string\n    search: string\n    sort: string\n    sortBy: number\n    all: boolean\n    buyNow: boolean\n    traits: string[]\n    markets: string[]\n  }\n  const modifiedQuery = urlParamsUtils.buildQuery(query, collectionStats)\n\n  return modifiedQuery\n}\n","import 'rc-slider/assets/index.css'\n\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { formatEther as ethersFormatEther, parseEther } from '@ethersproject/units'\nimport { Trans } from '@lingui/macro'\nimport { SweepFetcherParams, useSweepNftAssets } from 'graphql/data/nft/Asset'\nimport { useBag, useCollectionFilters } from 'nft/hooks'\nimport { GenieAsset, isPooledMarket, Markets } from 'nft/types'\nimport { calcPoolPrice, isInSameSudoSwapPool } from 'nft/utils'\nimport { default as Slider } from 'rc-slider'\nimport { useEffect, useMemo, useReducer, useState } from 'react'\nimport styled, { useTheme } from 'styled-components'\nimport { ThemedText } from 'theme/components'\nimport { NumberType, useFormatter } from 'utils/formatNumbers'\n\nconst SweepContainer = styled.div`\n  display: flex;\n  gap: 60px;\n  margin-top: 12px;\n  padding: 16px;\n  border-radius: 12px;\n  background-color: ${({ theme }) => theme.surface1};\n  justify-content: space-between;\n  background: linear-gradient(${({ theme }) => theme.surface1}, ${({ theme }) => theme.surface1}) padding-box,\n    linear-gradient(to right, #4673fa, #9646fa) border-box;\n  border: 2px solid transparent;\n`\n\nconst StyledSlider = styled(Slider)`\n  cursor: pointer;\n  @media only screen and (max-width: ${({ theme }) => `${theme.breakpoint.md}px`}) {\n    display: none;\n  }\n`\n\nconst SweepLeftmostContainer = styled.div`\n  display: flex;\n  width: 100%;\n  gap: 24px;\n`\n\nconst SweepRightmostContainer = styled.div`\n  display: flex;\n  flex-shrink: 0;\n  justify-content: flex-end;\n  align-items: center;\n  gap: 8px;\n  min-width: 160px;\n  @media only screen and (max-width: ${({ theme }) => `${theme.breakpoint.md}px`}) {\n    display: none;\n  }\n`\n\nconst SweepHeaderContainer = styled.div`\n  @media only screen and (max-width: ${({ theme }) => `${theme.breakpoint.md}px`}) {\n    display: none;\n  }\n`\n\nconst SweepSubContainer = styled.div`\n  display: flex;\n  width: 100%;\n  gap: 12px;\n  align-items: center;\n`\n\nconst InputContainer = styled.input`\n  width: 96px;\n  color: ${({ theme }) => theme.neutral1};\n  border: 1px solid ${({ theme }) => theme.surface3};\n  background: none;\n  border-radius: 8px;\n  padding: 6px 8px;\n  font-size: 16px;\n  font-weight: 485;\n  line-height: 20px;\n\n  @media only screen and (max-width: ${({ theme }) => `${theme.breakpoint.md}px`}) {\n    width: 100%;\n  }\n\n  :hover,\n  :focus {\n    outline: none;\n    border: 1px solid ${({ theme }) => theme.accent1};\n  }\n`\n\nconst ToggleContainer = styled.div`\n  display: flex;\n  border: 1px solid ${({ theme }) => theme.surface3};\n  background: none;\n  border-radius: 12px;\n  padding: 4px;\n  cursor: pointer;\n`\n\nconst ToggleSwitch = styled.div<{ active: boolean }>`\n  color: ${({ theme, active }) => (active ? theme.neutral1 : theme.neutral2)};\n  padding: 4px 8px;\n  border-radius: 8px;\n  background-color: ${({ theme, active }) => (active ? theme.surface3 : `none`)};\n  font-size: 14px;\n  font-weight: 535;\n  line-height: 16px;\n`\n\nconst NftDisplayContainer = styled.div`\n  position: relative;\n  width: 34px;\n  height: 34px;\n`\n\nconst NftHolder = styled.div<{ index: number; src?: string }>`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  width: 26px;\n  height: 26px;\n  border-radius: 4px;\n  background: ${({ theme, src }) => (src ? `url(${src})` : theme.neutral3)};\n  background-size: 26px;\n  opacity: ${({ src, index }) => (src ? 1.0 : index === 0 ? 0.9 : index === 1 ? 0.6 : 0.3)};\n  transform: ${({ index }) =>\n    index === 0\n      ? 'translate(-50%, -50%) rotate(-4.42deg)'\n      : index === 1\n      ? 'translate(-50%, -50%) rotate(-14.01deg)'\n      : 'translate(-50%, -50%) rotate(10.24deg)'};\n  z-index: ${({ index }) => 3 - index};\n`\n\nconst wholeNumberRegex = RegExp(`^(0|[1-9][0-9]*)$`)\nconst twoDecimalPlacesRegex = RegExp(`^\\\\d*\\\\.?\\\\d{0,2}$`)\n\ninterface NftDisplayProps {\n  nfts: GenieAsset[]\n}\n\nconst NftDisplay = ({ nfts }: NftDisplayProps) => {\n  return (\n    <NftDisplayContainer>\n      {[...Array(3)].map((_, index) => {\n        return (\n          <NftHolder\n            key={index}\n            index={index}\n            src={nfts.length - 1 >= index ? nfts[nfts.length - 1 - index].smallImageUrl : undefined}\n          />\n        )\n      })}\n    </NftDisplayContainer>\n  )\n}\n\ninterface SweepProps {\n  contractAddress: string\n  minPrice: string\n  maxPrice: string\n}\n\nexport const Sweep = ({ contractAddress, minPrice, maxPrice }: SweepProps) => {\n  const theme = useTheme()\n  const { formatEther } = useFormatter()\n\n  const [isItemsToggled, toggleSweep] = useReducer((state) => !state, true)\n  const [sweepAmount, setSweepAmount] = useState<string>('')\n\n  const addAssetsToBag = useBag((state) => state.addAssetsToBag)\n  const removeAssetsFromBag = useBag((state) => state.removeAssetsFromBag)\n  const itemsInBag = useBag((state) => state.itemsInBag)\n  const lockSweepItems = useBag((state) => state.lockSweepItems)\n  const setBagExpanded = useBag((state) => state.setBagExpanded)\n\n  const traits = useCollectionFilters((state) => state.traits)\n  const markets = useCollectionFilters((state) => state.markets)\n\n  const collectionParams = useSweepFetcherParams(contractAddress, 'others', minPrice, maxPrice)\n  const sudoSwapParams = useSweepFetcherParams(contractAddress, Markets.Sudoswap, minPrice, maxPrice)\n  const nftxParams = useSweepFetcherParams(contractAddress, Markets.NFTX, minPrice, maxPrice)\n  const nft20Params = useSweepFetcherParams(contractAddress, Markets.NFT20, minPrice, maxPrice)\n  // These calls will suspend if the query is not yet loaded.\n  const { data: collectionAssets } = useSweepNftAssets(collectionParams)\n  const { data: sudoSwapAssets } = useSweepNftAssets(sudoSwapParams)\n  const { data: nftxAssets } = useSweepNftAssets(nftxParams)\n  const { data: nft20Assets } = useSweepNftAssets(nft20Params)\n\n  const { sortedAssets, sortedAssetsTotalEth } = useMemo(() => {\n    if (!collectionAssets && !sudoSwapAssets && !nftxAssets && !nft20Assets) {\n      return { sortedAssets: undefined, sortedAssetsTotalEth: BigNumber.from(0) }\n    }\n\n    let counterNFTX = 0\n    let counterNFT20 = 0\n\n    let jointCollections: GenieAsset[] = []\n\n    if (sudoSwapAssets) jointCollections = [...jointCollections, ...sudoSwapAssets]\n    if (nftxAssets) jointCollections = [...jointCollections, ...nftxAssets]\n    if (nft20Assets) jointCollections = [...jointCollections, ...nft20Assets]\n\n    const sudoSwapAssetsInJointCollections = jointCollections.filter(\n      (sweepAsset) => sweepAsset.marketplace === Markets.Sudoswap && !sweepAsset.susFlag\n    )\n\n    jointCollections.forEach((asset) => {\n      if (!asset.susFlag) {\n        if (asset.marketplace === Markets.Sudoswap) {\n          const poolPrice = calcPoolPrice(\n            asset,\n            sudoSwapAssetsInJointCollections\n              .filter((sweepAsset) => isInSameSudoSwapPool(asset, sweepAsset))\n              .findIndex((sweepAsset) => sweepAsset.tokenId === asset.tokenId)\n          )\n          asset.priceInfo.ETHPrice = poolPrice ?? '0'\n        } else {\n          const isNFTX = asset.marketplace === Markets.NFTX\n          const poolPrice = calcPoolPrice(asset, isNFTX ? counterNFTX : counterNFT20)\n          if (BigNumber.from(poolPrice).gt(0)) {\n            isNFTX ? counterNFTX++ : counterNFT20++\n          }\n          asset.priceInfo.ETHPrice = poolPrice\n        }\n      }\n    })\n\n    jointCollections = collectionAssets ? collectionAssets.concat(jointCollections) : jointCollections\n\n    jointCollections.sort((a, b) => {\n      return BigNumber.from(a.priceInfo.ETHPrice).gt(BigNumber.from(b.priceInfo.ETHPrice)) ? 1 : -1\n    })\n\n    let validAssets = jointCollections.filter(\n      (asset) => BigNumber.from(asset.priceInfo.ETHPrice).gt(0) && !asset.susFlag\n    )\n\n    validAssets = validAssets.slice(\n      0,\n      Math.max(\n        collectionAssets?.length ?? 0,\n        sudoSwapAssets?.length ?? 0,\n        nftxAssets?.length ?? 0,\n        nft20Assets?.length ?? 0\n      )\n    )\n\n    return {\n      sortedAssets: validAssets,\n      sortedAssetsTotalEth: validAssets.reduce(\n        (total, asset) => total.add(BigNumber.from(asset.priceInfo.ETHPrice)),\n        BigNumber.from(0)\n      ),\n    }\n  }, [collectionAssets, sudoSwapAssets, nftxAssets, nft20Assets])\n\n  const { sweepItemsInBag, sweepEthPrice } = useMemo(() => {\n    const sweepItemsInBag = itemsInBag\n      .filter((item) => item.inSweep && item.asset.address === contractAddress)\n      .map((item) => item.asset)\n\n    const sweepEthPrice = sweepItemsInBag.reduce(\n      (total, asset) => total.add(BigNumber.from(asset.priceInfo.ETHPrice)),\n      BigNumber.from(0)\n    )\n\n    return { sweepItemsInBag, sweepEthPrice }\n  }, [itemsInBag, contractAddress])\n\n  useEffect(() => {\n    if (sweepItemsInBag.length === 0) setSweepAmount('')\n  }, [sweepItemsInBag])\n\n  useEffect(() => {\n    lockSweepItems(contractAddress)\n  }, [contractAddress, traits, markets, minPrice, maxPrice, lockSweepItems])\n\n  const clearSweep = () => {\n    setSweepAmount('')\n    removeAssetsFromBag(sweepItemsInBag)\n  }\n\n  const handleSweep = (value: number) => {\n    if (sortedAssets) {\n      if (isItemsToggled) {\n        if (sweepItemsInBag.length === 0 && value > 0) setBagExpanded({ bagExpanded: true })\n\n        if (sweepItemsInBag.length < value) {\n          addAssetsToBag(sortedAssets.slice(sweepItemsInBag.length, value), true)\n        } else {\n          removeAssetsFromBag(sweepItemsInBag.slice(value, sweepItemsInBag.length), true)\n        }\n        setSweepAmount(value < 1 ? '' : value.toString())\n      } else {\n        const wishValueInWei = parseEther(value.toString())\n        if (sweepEthPrice.lte(wishValueInWei)) {\n          let curIndex = sweepItemsInBag.length\n          let curTotal = sweepEthPrice\n          const wishAssets: GenieAsset[] = []\n\n          while (\n            curIndex < sortedAssets.length &&\n            curTotal.add(BigNumber.from(sortedAssets[curIndex].priceInfo.ETHPrice)).lte(wishValueInWei)\n          ) {\n            wishAssets.push(sortedAssets[curIndex])\n            curTotal = curTotal.add(BigNumber.from(sortedAssets[curIndex].priceInfo.ETHPrice))\n            curIndex++\n          }\n\n          if (wishAssets.length > 0) {\n            if (sweepItemsInBag.length === 0) setBagExpanded({ bagExpanded: true })\n            addAssetsToBag(wishAssets, true)\n          }\n        } else {\n          let curIndex = sweepItemsInBag.length - 1\n          let curTotal = sweepEthPrice\n          const wishAssets: GenieAsset[] = []\n\n          while (curIndex >= 0 && curTotal.gt(wishValueInWei)) {\n            wishAssets.push(sweepItemsInBag[curIndex])\n            curTotal = curTotal.sub(BigNumber.from(sweepItemsInBag[curIndex].priceInfo.ETHPrice))\n            curIndex--\n          }\n\n          if (wishAssets.length > 0) {\n            removeAssetsFromBag(wishAssets, true)\n          }\n        }\n\n        setSweepAmount(value === 0 ? '' : value.toFixed(2))\n      }\n    }\n  }\n\n  const handleSliderChange = (value: number | number[]) => {\n    if (typeof value === 'number') {\n      if (sortedAssets) {\n        if (isItemsToggled) {\n          if (Math.floor(value) !== Math.floor(sweepAmount !== '' ? parseFloat(sweepAmount) : 0))\n            handleSweep(Math.floor(value))\n          setSweepAmount(value < 1 ? '' : value.toString())\n        } else {\n          handleSweep(value)\n          setSweepAmount(value === 0 ? '' : value.toFixed(2))\n        }\n      }\n    }\n  }\n\n  const handleInput = (value: string) => {\n    if (value === '') {\n      handleSweep(0)\n      setSweepAmount('')\n    } else if (isItemsToggled && wholeNumberRegex.test(value)) {\n      handleSweep(parseFloat(value))\n      setSweepAmount(value)\n    } else if (!isItemsToggled && twoDecimalPlacesRegex.test(value)) {\n      handleSweep(parseFloat(value))\n      setSweepAmount(value)\n    }\n  }\n\n  const handleToggleSweep = () => {\n    clearSweep()\n    toggleSweep()\n  }\n\n  return (\n    <SweepContainer data-testid=\"nft-sweep-slider\">\n      <SweepLeftmostContainer>\n        <SweepHeaderContainer>\n          <ThemedText.SubHeader lineHeight=\"20px\" paddingTop=\"6px\" paddingBottom=\"6px\">\n            <Trans>Sweep</Trans>\n          </ThemedText.SubHeader>\n        </SweepHeaderContainer>\n        <SweepSubContainer>\n          <StyledSlider\n            defaultValue={0}\n            min={0}\n            max={\n              isItemsToggled\n                ? sortedAssets?.length ?? 0\n                : parseFloat(ethersFormatEther(sortedAssetsTotalEth).toString())\n            }\n            value={isItemsToggled ? sweepItemsInBag.length : parseFloat(ethersFormatEther(sweepEthPrice.toString()))}\n            step={isItemsToggled ? 1 : 0.01}\n            trackStyle={{\n              top: '3px',\n              height: '8px',\n              background: `radial-gradient(101.8% 4091.31% at 0% 0%, #4673FA 0%, #9646FA 100%)`,\n            }}\n            handleStyle={{\n              top: '3px',\n              width: '12px',\n              height: '20px',\n              backgroundColor: `#4673FA`, //This is a custom color to align with the gradient on sweep - we may want to systematize it eventually\n              borderRadius: '4px',\n              border: 'none',\n              opacity: '1',\n              boxShadow: `${theme.deprecated_shallowShadow.slice(0, -1)}`,\n            }}\n            railStyle={{\n              top: '3px',\n              height: '8px',\n              backgroundColor: `${theme.surface3}`,\n            }}\n            onChange={handleSliderChange}\n          />\n          <InputContainer\n            inputMode=\"decimal\"\n            autoComplete=\"off\"\n            autoCorrect=\"off\"\n            // text-specific options\n            type=\"text\"\n            pattern=\"^[0-9]*[.,]?[0-9]*$\"\n            placeholder=\"0\"\n            minLength={1}\n            maxLength={79}\n            spellCheck=\"false\"\n            value={\n              isItemsToggled ? (sweepAmount !== '' ? Math.floor(parseFloat(sweepAmount)) : sweepAmount) : sweepAmount\n            }\n            onChange={(event) => {\n              handleInput(event.target.value.replace(/,/g, '.'))\n            }}\n          />\n          <ToggleContainer onClick={handleToggleSweep}>\n            <ToggleSwitch active={isItemsToggled}>Items</ToggleSwitch>\n            <ToggleSwitch active={!isItemsToggled}>ETH</ToggleSwitch>\n          </ToggleContainer>\n        </SweepSubContainer>\n      </SweepLeftmostContainer>\n      <SweepRightmostContainer>\n        <ThemedText.SubHeader font-size=\"14px\">{`${formatEther({\n          input: sweepEthPrice.toString(),\n          type: NumberType.NFTToken,\n        })} ETH`}</ThemedText.SubHeader>\n        <NftDisplay nfts={sweepItemsInBag} />\n      </SweepRightmostContainer>\n    </SweepContainer>\n  )\n}\n\nconst ALL_OTHER_MARKETS = [Markets.Opensea, Markets.X2Y2, Markets.LooksRare]\n\nfunction useSweepFetcherParams(\n  contractAddress: string,\n  market: Markets.Sudoswap | Markets.NFTX | Markets.NFT20 | 'others',\n  minPrice: string,\n  maxPrice: string\n): SweepFetcherParams {\n  const traits = useCollectionFilters((state) => state.traits)\n  const markets = useCollectionFilters((state) => state.markets)\n\n  const isMarketFiltered = !!markets.length\n\n  return useMemo(() => {\n    if (isMarketFiltered) {\n      if (market === 'others') {\n        const marketsToQuery = markets.filter((market) => !isPooledMarket(market as Markets))\n\n        if (marketsToQuery.length > 0) {\n          return {\n            contractAddress,\n            traits,\n            markets: marketsToQuery,\n          }\n        } else {\n          return { contractAddress: '', traits: [], markets: [] }\n        }\n      }\n      if (!markets.includes(market)) return { contractAddress: '', traits: [], markets: [] }\n    }\n\n    switch (market) {\n      case Markets.Sudoswap:\n      case Markets.NFTX:\n      case Markets.NFT20:\n        return {\n          contractAddress,\n          traits,\n          markets: [market],\n\n          price: {\n            low: minPrice,\n            high: maxPrice,\n            symbol: 'ETH',\n          },\n        }\n      case 'others':\n        return {\n          contractAddress,\n          traits,\n          markets: ALL_OTHER_MARKETS,\n\n          price: {\n            low: minPrice,\n            high: maxPrice,\n            symbol: 'ETH',\n          },\n        }\n    }\n  }, [contractAddress, isMarketFiltered, market, markets, maxPrice, minPrice, traits])\n}\n","import { CrossIcon } from 'nft/components/icons'\nimport styled from 'styled-components'\n\nconst TraitChipWrap = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 6px 6px 6px 12px;\n  font-weight: 535;\n  border-radius: 8px;\n  background-color: ${({ theme }) => theme.surface3};\n  font-size: 14px;\n`\n\nconst CrossIconWrap = styled.div`\n  color: ${({ theme }) => theme.neutral2};\n  height: 28px;\n  width: 28px;\n  border: none;\n  padding-top: 1px;\n`\n\nexport const TraitChip = ({ onClick, value }: { value: string | JSX.Element; onClick: () => void }) => {\n  return (\n    <TraitChipWrap>\n      <span>{value}</span>\n      <CrossIconWrap onClick={onClick}>\n        <CrossIcon cursor=\"pointer\" />\n      </CrossIconWrap>\n    </TraitChipWrap>\n  )\n}\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { parseEther } from '@ethersproject/units'\nimport { BrowserEvent, InterfaceElementName, NFTEventName } from '@uniswap/analytics-events'\nimport { useWeb3React } from '@web3-react/core'\nimport { TraceEvent } from 'analytics'\nimport clsx from 'clsx'\nimport { OpacityHoverState } from 'components/Common'\nimport { NftAssetTraitInput, NftMarketplace, NftStandard } from 'graphql/data/__generated__/types-and-hooks'\nimport { ASSET_PAGE_SIZE, AssetFetcherParams, useNftAssets } from 'graphql/data/nft/Asset'\nimport useDebounce from 'hooks/useDebounce'\nimport { useScreenSize } from 'hooks/useScreenSize'\nimport { AnimatedBox, Box } from 'nft/components/Box'\nimport { CollectionSearch, FilterButton } from 'nft/components/collection'\nimport { CollectionAsset } from 'nft/components/collection/CollectionAsset'\nimport * as styles from 'nft/components/collection/CollectionNfts.css'\nimport { SortDropdown } from 'nft/components/common/SortDropdown'\nimport { Center, Column, Row } from 'nft/components/Flex'\nimport { SweepIcon } from 'nft/components/icons'\nimport { bodySmall, buttonTextMedium, headlineMedium } from 'nft/css/common.css'\nimport { loadingAsset } from 'nft/css/loading.css'\nimport {\n  CollectionFilters,\n  initialCollectionFilterState,\n  SortBy,\n  SortByQueries,\n  useBag,\n  useCollectionFilters,\n  useFiltersExpanded,\n  useIsMobile,\n} from 'nft/hooks'\nimport { useIsCollectionLoading } from 'nft/hooks/useIsCollectionLoading'\nimport { usePriceRange } from 'nft/hooks/usePriceRange'\nimport {\n  DropDownOption,\n  GenieAsset,\n  GenieCollection,\n  isPooledMarket,\n  Markets,\n  UniformAspectRatio,\n  UniformAspectRatios,\n} from 'nft/types'\nimport {\n  calcPoolPrice,\n  getMarketplaceIcon,\n  getRarityStatus,\n  isInSameMarketplaceCollection,\n  isInSameSudoSwapPool,\n  pluralize,\n} from 'nft/utils'\nimport { scrollToTop } from 'nft/utils/scrollToTop'\nimport { applyFiltersFromURL, syncLocalFiltersWithURL } from 'nft/utils/urlParams'\nimport { useCallback, useEffect, useMemo, useRef, useState } from 'react'\nimport InfiniteScroll from 'react-infinite-scroll-component'\nimport { useLocation } from 'react-router-dom'\nimport styled, { css } from 'styled-components'\nimport { ThemedText } from 'theme/components'\n\nimport { LoadingAssets } from './CollectionAssetLoading'\nimport { MARKETPLACE_ITEMS } from './MarketplaceSelect'\nimport { ClearAllButton } from './shared'\nimport { Sweep } from './Sweep'\nimport { TraitChip } from './TraitChip'\n\ninterface CollectionNftsProps {\n  contractAddress: string\n  collectionStats: GenieCollection\n  rarityVerified?: boolean\n}\n\nconst rarityStatusCache = new Map<string, boolean>()\n\nconst InfiniteScrollWrapperCss = css`\n  margin: 0 16px;\n  @media screen and (min-width: ${({ theme }) => theme.breakpoint.sm}px) {\n    margin: 0 20px;\n  }\n  @media screen and (min-width: ${({ theme }) => theme.breakpoint.md}px) {\n    margin: 0 26px;\n  }\n  @media screen and (min-width: ${({ theme }) => theme.breakpoint.lg}px) {\n    margin: 0 48px;\n  }\n`\n\nconst ActionsContainer = styled.div`\n  display: flex;\n  flex: 1 1 auto;\n  gap: 10px;\n  justify-content: space-between;\n\n  ${InfiniteScrollWrapperCss}\n`\n\nconst ActionsSubContainer = styled.div`\n  display: flex;\n  gap: 12px;\n  flex: 1;\n  min-width: 0px;\n  @media only screen and (max-width: ${({ theme }) => `${theme.breakpoint.md}px`}) {\n    gap: 10px;\n  }\n`\n\nconst SortDropdownContainer = styled.div<{ isFiltersExpanded: boolean }>`\n  width: max-content;\n  height: 44px;\n  @media only screen and (max-width: ${({ theme }) => `${theme.breakpoint.lg}px`}) {\n    ${({ isFiltersExpanded }) => isFiltersExpanded && `display: none;`}\n  }\n  @media only screen and (max-width: ${({ theme }) => `${theme.breakpoint.md}px`}) {\n    display: none;\n  }\n`\n\nconst EmptyCollectionWrapper = styled.div`\n  display: block;\n  text-align: center;\n`\n\nconst ViewFullCollection = styled.span`\n  ${OpacityHoverState}\n`\n\nconst InfiniteScrollWrapper = styled.div`\n  ${InfiniteScrollWrapperCss}\n`\n\nconst SweepButton = styled.div<{ toggled: boolean; disabled?: boolean }>`\n  display: flex;\n  gap: 8px;\n  border: none;\n  border-radius: 12px;\n  padding: 12px 18px 12px 12px;\n  cursor: ${({ disabled }) => (disabled ? 'auto' : 'pointer')};\n  color: ${({ toggled, disabled, theme }) =>\n    toggled && !disabled ? theme.deprecated_accentTextLightPrimary : theme.neutral1};\n  background: ${({ theme, toggled, disabled }) =>\n    !disabled && toggled ? 'radial-gradient(101.8% 4091.31% at 0% 0%, #4673FA 0%, #9646FA 100%)' : theme.surface3};\n  opacity: ${({ disabled }) => (disabled ? 0.4 : 1)};\n  :hover {\n    background-color: ${({ theme }) => theme.surface3};\n    transition: ${({\n      theme: {\n        transition: { duration, timing },\n      },\n    }) => `${duration.fast} background-color ${timing.in}`};\n  }\n\n  @media only screen and (max-width: ${({ theme }) => `${theme.breakpoint.md}px`}) {\n    padding: 12px 12px 12px 12px;\n  }\n`\n\nconst SweepText = styled(ThemedText.BodyPrimary)`\n  @media only screen and (max-width: ${({ theme }) => `${theme.breakpoint.md}px`}) {\n    display: none;\n  }\n`\n\nconst MarketNameWrapper = styled(Row)`\n  gap: 8px;\n`\n\nconst CollectionNftsLoading = ({ height }: { height?: number }) => (\n  <Box width=\"full\" className={styles.assetList}>\n    <LoadingAssets height={height} />\n  </Box>\n)\n\nexport const CollectionNftsAndMenuLoading = () => (\n  <InfiniteScrollWrapper>\n    <Column alignItems=\"flex-start\" position=\"relative\" width=\"full\">\n      <Row marginY=\"12\" gap=\"12\" marginBottom=\"40\">\n        <Box className={loadingAsset} borderRadius=\"12\" width={{ sm: '44', md: '100' }} height=\"44\" />\n        <Box\n          className={loadingAsset}\n          borderRadius=\"12\"\n          height=\"44\"\n          display={{ sm: 'none', md: 'flex' }}\n          style={{ width: '220px' }}\n        />\n        <Box className={loadingAsset} borderRadius=\"12\" height=\"44\" width={{ sm: '276', md: '332' }} />\n      </Row>\n      <CollectionNftsLoading />\n    </Column>\n  </InfiniteScrollWrapper>\n)\n\nexport const getSortDropdownOptions = (setSortBy: (sortBy: SortBy) => void, hasRarity: boolean): DropDownOption[] => {\n  const options = [\n    {\n      displayText: 'Price: Low to High',\n      onClick: () => setSortBy(SortBy.LowToHigh),\n      reverseIndex: 2,\n      sortBy: SortBy.LowToHigh,\n    },\n    {\n      displayText: 'Price: High to Low',\n      onClick: () => setSortBy(SortBy.HighToLow),\n      reverseIndex: 1,\n      sortBy: SortBy.HighToLow,\n    },\n  ]\n  return hasRarity\n    ? options.concat([\n        {\n          displayText: 'Rarity: Rare to Common',\n          onClick: () => setSortBy(SortBy.RareToCommon),\n          reverseIndex: 4,\n          sortBy: SortBy.RareToCommon,\n        },\n        {\n          displayText: 'Rarity: Common to Rare',\n          onClick: () => setSortBy(SortBy.CommonToRare),\n          reverseIndex: 3,\n          sortBy: SortBy.CommonToRare,\n        },\n      ])\n    : options\n}\n\nexport const CollectionNfts = ({ contractAddress, collectionStats, rarityVerified }: CollectionNftsProps) => {\n  const { chainId } = useWeb3React()\n  const traits = useCollectionFilters((state) => state.traits)\n  const minPrice = useCollectionFilters((state) => state.minPrice)\n  const maxPrice = useCollectionFilters((state) => state.maxPrice)\n  const markets = useCollectionFilters((state) => state.markets)\n  const sortBy = useCollectionFilters((state) => state.sortBy)\n  const searchByNameText = useCollectionFilters((state) => state.search)\n  const setMarketCount = useCollectionFilters((state) => state.setMarketCount)\n  const setSortBy = useCollectionFilters((state) => state.setSortBy)\n  const buyNow = useCollectionFilters((state) => state.buyNow)\n\n  const setPriceRangeLow = usePriceRange((state) => state.setPriceRangeLow)\n  const priceRangeLow = usePriceRange((state) => state.priceRangeLow)\n  const priceRangeHigh = usePriceRange((state) => state.priceRangeHigh)\n  const setPriceRangeHigh = usePriceRange((state) => state.setPriceRangeHigh)\n  const setPrevMinMax = usePriceRange((state) => state.setPrevMinMax)\n\n  const setIsCollectionNftsLoading = useIsCollectionLoading((state) => state.setIsCollectionNftsLoading)\n  const removeTrait = useCollectionFilters((state) => state.removeTrait)\n  const removeMarket = useCollectionFilters((state) => state.removeMarket)\n  const reset = useCollectionFilters((state) => state.reset)\n  const setMin = useCollectionFilters((state) => state.setMinPrice)\n  const setMax = useCollectionFilters((state) => state.setMaxPrice)\n  const setHasRarity = useCollectionFilters((state) => state.setHasRarity)\n\n  const toggleBag = useBag((state) => state.toggleBag)\n  const bagExpanded = useBag((state) => state.bagExpanded)\n  const itemsInBag = useBag((state) => state.itemsInBag)\n\n  const debouncedMinPrice = useDebounce(minPrice, 500)\n  const debouncedMaxPrice = useDebounce(maxPrice, 500)\n  const debouncedSearchByNameText = useDebounce(searchByNameText, 500)\n\n  const [uniformAspectRatio, setUniformAspectRatio] = useState<UniformAspectRatio>(UniformAspectRatios.unset)\n  const [renderedHeight, setRenderedHeight] = useState<number | undefined>()\n\n  const [sweepIsOpen, setSweepOpen] = useState(false)\n\n  const assetQueryParams: AssetFetcherParams = {\n    address: contractAddress,\n    orderBy: SortByQueries[sortBy].field,\n    asc: SortByQueries[sortBy].asc,\n    filter: {\n      listed: buyNow,\n      marketplaces: markets.length > 0 ? markets.map((market) => market.toUpperCase() as NftMarketplace) : undefined,\n      maxPrice: debouncedMaxPrice ? parseEther(debouncedMaxPrice.toString()).toString() : undefined,\n      minPrice: debouncedMinPrice ? parseEther(debouncedMinPrice.toString()).toString() : undefined,\n      tokenSearchQuery: debouncedSearchByNameText,\n      traits:\n        traits.length > 0\n          ? traits.map((trait) => {\n              return { name: trait.trait_type, values: [trait.trait_value] } as unknown as NftAssetTraitInput\n            })\n          : undefined,\n    },\n    first: ASSET_PAGE_SIZE,\n  }\n\n  const { data: collectionNfts, loading, hasNext, loadMore } = useNftAssets(assetQueryParams)\n\n  const getPoolPosition = useCallback(\n    (asset: GenieAsset) => {\n      const assetInBag = itemsInBag.some(\n        (item) => asset.tokenId === item.asset.tokenId && asset.address === item.asset.address\n      )\n\n      if (asset.marketplace === Markets.Sudoswap) {\n        const bagItemsInSudoSwapPool = itemsInBag.filter((item) => isInSameSudoSwapPool(asset, item.asset))\n        if (assetInBag) {\n          return bagItemsInSudoSwapPool.findIndex((item) => item.asset.tokenId === asset.tokenId)\n        } else {\n          return bagItemsInSudoSwapPool.length\n        }\n      }\n\n      return assetInBag\n        ? itemsInBag\n            .filter((item) => isInSameMarketplaceCollection(asset, item.asset))\n            .findIndex((item) => item.asset.tokenId === asset.tokenId)\n        : itemsInBag.filter((item) => isInSameMarketplaceCollection(asset, item.asset)).length\n    },\n    [itemsInBag]\n  )\n\n  const calculatePrice = useCallback(\n    (asset: GenieAsset) => {\n      return calcPoolPrice(asset, getPoolPosition(asset))\n    },\n    [getPoolPosition]\n  )\n\n  const collectionAssets = useMemo(() => {\n    if (!collectionNfts || !collectionNfts.some((asset) => asset.marketplace && isPooledMarket(asset.marketplace))) {\n      return collectionNfts\n    }\n\n    const assets = [...collectionNfts]\n\n    assets.forEach(\n      (asset) =>\n        asset.marketplace &&\n        isPooledMarket(asset.marketplace) &&\n        (asset.priceInfo.ETHPrice = calculatePrice(asset) ?? '0')\n    )\n\n    if (sortBy === SortBy.HighToLow || sortBy === SortBy.LowToHigh) {\n      assets.sort((a, b) => {\n        const bigA = BigNumber.from(a.priceInfo?.ETHPrice ?? 0)\n        const bigB = BigNumber.from(b.priceInfo?.ETHPrice ?? 0)\n\n        // Always sort not for sale (price = 0) assets to the end\n        if (bigA.gt(0) && bigB.lte(0)) {\n          return -1\n        } else if (bigB.gt(0) && bigA.lte(0)) {\n          return 1\n        }\n\n        const diff = bigA.sub(bigB)\n        if (diff.gt(0)) {\n          return sortBy === SortBy.LowToHigh ? 1 : -1\n        } else if (diff.lt(0)) {\n          return sortBy === SortBy.LowToHigh ? -1 : 1\n        }\n\n        return 0\n      })\n    }\n\n    return assets\n  }, [collectionNfts, sortBy, calculatePrice])\n\n  const [currentTokenPlayingMedia, setCurrentTokenPlayingMedia] = useState<string | undefined>()\n  const [isFiltersExpanded, setFiltersExpanded] = useFiltersExpanded()\n  const oldStateRef = useRef<CollectionFilters | null>(null)\n  const isMobile = useIsMobile()\n  const screenSize = useScreenSize()\n\n  useEffect(() => {\n    setIsCollectionNftsLoading(loading)\n  }, [loading, setIsCollectionNftsLoading])\n\n  const hasRarity = useMemo(() => {\n    const hasRarity = getRarityStatus(rarityStatusCache, collectionStats?.address, collectionAssets) ?? false\n    setHasRarity(hasRarity)\n    return hasRarity\n  }, [collectionStats.address, collectionAssets, setHasRarity])\n\n  const sortDropDownOptions: DropDownOption[] = useMemo(\n    () => getSortDropdownOptions(setSortBy, hasRarity),\n    [hasRarity, setSortBy]\n  )\n\n  useEffect(() => {\n    setSweepOpen(false)\n    return () => {\n      useCollectionFilters.setState(initialCollectionFilterState)\n    }\n  }, [contractAddress])\n\n  const assets = useMemo(() => {\n    if (!collectionAssets) return null\n    return collectionAssets.map((asset) => (\n      <CollectionAsset\n        key={asset.address + asset.tokenId}\n        asset={asset}\n        isMobile={isMobile}\n        mediaShouldBePlaying={asset.tokenId === currentTokenPlayingMedia}\n        setCurrentTokenPlayingMedia={setCurrentTokenPlayingMedia}\n        rarityVerified={rarityVerified}\n        uniformAspectRatio={uniformAspectRatio}\n        setUniformAspectRatio={setUniformAspectRatio}\n        renderedHeight={renderedHeight}\n        setRenderedHeight={setRenderedHeight}\n      />\n    ))\n  }, [collectionAssets, isMobile, currentTokenPlayingMedia, rarityVerified, uniformAspectRatio, renderedHeight])\n\n  const hasNfts = collectionAssets && collectionAssets.length > 0\n  const hasErc1155s = hasNfts && collectionAssets[0] && collectionAssets[0]?.tokenType === NftStandard.Erc1155\n\n  const minMaxPriceChipText: string | undefined = useMemo(() => {\n    if (debouncedMinPrice && debouncedMaxPrice) {\n      return `Price: ${debouncedMinPrice} - ${debouncedMaxPrice} ETH`\n    } else if (debouncedMinPrice) {\n      return `Min. Price: ${debouncedMinPrice} ETH`\n    } else if (debouncedMaxPrice) {\n      return `Max Price: ${debouncedMaxPrice} ETH`\n    }\n\n    return undefined\n  }, [debouncedMinPrice, debouncedMaxPrice])\n\n  useEffect(() => {\n    const marketCount: any = {}\n    collectionStats?.marketplaceCount?.forEach(({ marketplace, count }) => {\n      marketCount[marketplace] = count\n    })\n    setMarketCount(marketCount)\n    oldStateRef.current = useCollectionFilters.getState()\n  }, [collectionStats?.marketplaceCount, setMarketCount])\n\n  const location = useLocation()\n  // Applying filters from URL to local state\n  useEffect(() => {\n    if (collectionStats?.traits) {\n      const modifiedQuery = applyFiltersFromURL(location, collectionStats)\n\n      requestAnimationFrame(() => {\n        if (modifiedQuery) {\n          useCollectionFilters.setState(modifiedQuery as any)\n        }\n      })\n\n      useCollectionFilters.subscribe((state) => {\n        if (JSON.stringify(oldStateRef.current) !== JSON.stringify(state)) {\n          syncLocalFiltersWithURL(state)\n          oldStateRef.current = state\n        }\n      })\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [location])\n\n  useEffect(() => {\n    setUniformAspectRatio(UniformAspectRatios.unset)\n    setRenderedHeight(undefined)\n  }, [contractAddress])\n\n  useEffect(() => {\n    if (collectionStats && collectionStats.stats?.floor_price) {\n      const lowValue = collectionStats.stats?.floor_price\n      const maxValue = 10 * collectionStats.stats?.floor_price\n\n      if (priceRangeLow === '') {\n        setPriceRangeLow(lowValue?.toFixed(2))\n      }\n\n      if (priceRangeHigh === '') {\n        setPriceRangeHigh(maxValue.toFixed(2))\n      }\n    }\n  }, [collectionStats, priceRangeLow, priceRangeHigh, setPriceRangeHigh, setPriceRangeLow])\n\n  const handleSweepClick = useCallback(() => {\n    if (hasErc1155s) return\n    if (!sweepIsOpen) {\n      scrollToTop()\n      if (!bagExpanded && !isMobile) toggleBag()\n    }\n    setSweepOpen(!sweepIsOpen)\n  }, [bagExpanded, hasErc1155s, isMobile, sweepIsOpen, toggleBag])\n\n  const handleClearAllClick = useCallback(() => {\n    reset()\n    setPrevMinMax([0, 100])\n    scrollToTop()\n  }, [reset, setPrevMinMax])\n\n  return (\n    <>\n      <AnimatedBox\n        backgroundColor=\"surface1\"\n        position=\"sticky\"\n        top=\"72\"\n        width=\"full\"\n        zIndex=\"3\"\n        marginBottom={{ sm: '8', md: '20' }}\n        paddingTop=\"16\"\n        paddingBottom=\"16\"\n      >\n        <ActionsContainer>\n          <ActionsSubContainer>\n            <TraceEvent\n              events={[BrowserEvent.onClick]}\n              element={InterfaceElementName.NFT_FILTER_BUTTON}\n              name={NFTEventName.NFT_FILTER_OPENED}\n              shouldLogImpression={!isFiltersExpanded}\n              properties={{ collection_address: contractAddress, chain_id: chainId }}\n            >\n              <FilterButton\n                isMobile={isMobile}\n                isFiltersExpanded={isFiltersExpanded}\n                collectionCount={collectionAssets?.[0]?.totalCount ?? 0}\n                onClick={() => {\n                  if (bagExpanded && !screenSize['xl']) toggleBag()\n                  setFiltersExpanded(!isFiltersExpanded)\n                }}\n              />\n            </TraceEvent>\n            <SortDropdownContainer isFiltersExpanded={isFiltersExpanded}>\n              <SortDropdown dropDownOptions={sortDropDownOptions} />\n            </SortDropdownContainer>\n            <CollectionSearch />\n          </ActionsSubContainer>\n          {!hasErc1155s && (\n            <SweepButton\n              toggled={sweepIsOpen}\n              disabled={hasErc1155s}\n              className={buttonTextMedium}\n              onClick={handleSweepClick}\n              data-testid=\"nft-sweep-button\"\n            >\n              <SweepIcon viewBox=\"0 0 24 24\" width=\"20px\" height=\"20px\" />\n              <SweepText fontWeight={535} color=\"currentColor\" lineHeight=\"20px\">\n                Sweep\n              </SweepText>\n            </SweepButton>\n          )}\n        </ActionsContainer>\n        <InfiniteScrollWrapper>\n          {sweepIsOpen && (\n            <Sweep contractAddress={contractAddress} minPrice={debouncedMinPrice} maxPrice={debouncedMaxPrice} />\n          )}\n          <Row\n            paddingTop={!!markets.length || !!traits.length || minMaxPriceChipText ? '12' : '0'}\n            gap=\"8\"\n            flexWrap=\"wrap\"\n          >\n            {markets.map((market) => (\n              <TraitChip\n                key={market}\n                value={\n                  <MarketNameWrapper>\n                    {getMarketplaceIcon(market, '16')}\n                    {MARKETPLACE_ITEMS[market as keyof typeof MARKETPLACE_ITEMS]}\n                  </MarketNameWrapper>\n                }\n                onClick={() => {\n                  scrollToTop()\n                  removeMarket(market)\n                }}\n              />\n            ))}\n            {traits.map((trait) => (\n              <TraitChip\n                key={trait.trait_value}\n                value={\n                  trait.trait_type === 'Number of traits'\n                    ? `${trait.trait_value} trait${pluralize(Number(trait.trait_value))}`\n                    : `${trait.trait_type}: ${trait.trait_value}`\n                }\n                onClick={() => {\n                  scrollToTop()\n                  removeTrait(trait)\n                }}\n              />\n            ))}\n            {minMaxPriceChipText && (\n              <TraitChip\n                value={minMaxPriceChipText}\n                onClick={() => {\n                  scrollToTop()\n                  setMin('')\n                  setMax('')\n                  setPrevMinMax([0, 100])\n                }}\n              />\n            )}\n            {Boolean(traits.length || markets.length || minMaxPriceChipText) && (\n              <ClearAllButton onClick={handleClearAllClick}>Clear All</ClearAllButton>\n            )}\n          </Row>\n        </InfiniteScrollWrapper>\n      </AnimatedBox>\n      <InfiniteScrollWrapper>\n        {loading ? (\n          <CollectionNftsLoading height={renderedHeight} />\n        ) : (\n          <InfiniteScroll\n            next={loadMore}\n            hasMore={hasNext ?? false}\n            loader={Boolean(hasNext && hasNfts) && <LoadingAssets />}\n            dataLength={collectionAssets?.length ?? 0}\n            style={{ overflow: 'unset' }}\n            className={hasNfts ? styles.assetList : undefined}\n          >\n            {!hasNfts ? (\n              <Center width=\"full\" color=\"neutral2\" textAlign=\"center\" style={{ height: '60vh' }}>\n                <EmptyCollectionWrapper>\n                  <p className={headlineMedium}>No NFTS found</p>\n                  <Box\n                    onClick={reset}\n                    type=\"button\"\n                    className={clsx(bodySmall, buttonTextMedium)}\n                    color=\"accent1\"\n                    cursor=\"pointer\"\n                  >\n                    <ViewFullCollection>View full collection</ViewFullCollection>\n                  </Box>\n                </EmptyCollectionWrapper>\n              </Center>\n            ) : (\n              assets\n            )}\n          </InfiniteScroll>\n        )}\n      </InfiniteScrollWrapper>\n    </>\n  )\n}\n","import clsx from 'clsx'\nimport { Box } from 'nft/components/Box'\nimport * as styles from 'nft/components/collection/CollectionSearch.css'\nimport { useIsCollectionLoading } from 'nft/hooks'\nimport { useCollectionFilters } from 'nft/hooks/useCollectionFilters'\nimport { FormEvent } from 'react'\n\nexport const CollectionSearch = () => {\n  const setSearchByNameText = useCollectionFilters((state) => state.setSearch)\n  const searchByNameText = useCollectionFilters((state) => state.search)\n  const iscollectionStatsLoading = useIsCollectionLoading((state) => state.isCollectionStatsLoading)\n\n  return (\n    <Box\n      as=\"input\"\n      flex=\"1\"\n      borderColor={{ default: 'surface3', focus: 'accent1' }}\n      borderWidth=\"1.5px\"\n      borderStyle=\"solid\"\n      borderRadius=\"12\"\n      padding=\"12\"\n      backgroundColor=\"surface1\"\n      maxWidth=\"332\"\n      minWidth=\"0\"\n      fontSize=\"16\"\n      fontWeight=\"book\"\n      height=\"44\"\n      color={{ placeholder: 'neutral3', default: 'neutral1' }}\n      value={searchByNameText}\n      placeholder={iscollectionStatsLoading ? '' : 'Search by name'}\n      className={clsx(iscollectionStatsLoading && styles.filterButtonLoading)}\n      onChange={(e: FormEvent<HTMLInputElement>) => {\n        setSearchByNameText(e.currentTarget.value)\n      }}\n    />\n  )\n}\n","import \"src/nft/css/sprinkles.css.ts.vanilla.css!=!../../../../node_modules/@vanilla-extract/webpack-plugin/virtualFileLoader/dist/vanilla-extract-webpack-plugin-virtualFileLoader.cjs.js?{\\\"fileName\\\":\\\"src/nft/css/sprinkles.css.ts.vanilla.css\\\",\\\"source\\\":\\\"#\\\"}!../../../../node_modules/@vanilla-extract/webpack-plugin/extracted.js\"\nimport \"src/nft/css/loading.css.ts.vanilla.css!=!../../../../node_modules/@vanilla-extract/webpack-plugin/virtualFileLoader/dist/vanilla-extract-webpack-plugin-virtualFileLoader.cjs.js?{\\\"fileName\\\":\\\"src/nft/css/loading.css.ts.vanilla.css\\\",\\\"source\\\":\\\"QGtleWZyYW1lcyBla2xhMW4wIHsKICAwJSB7CiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAxMDAlIDUwJTsKICB9CiAgMTAwJSB7CiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAwJSA1MCU7CiAgfQp9Ci5la2xhMW4xIHsKICBhbmltYXRpb246IGVrbGExbjAgMS41cyBpbmZpbml0ZTsKICBhbmltYXRpb24tZmlsbC1tb2RlOiBib3RoOwogIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCh0byBsZWZ0LCB2YXIoLS1fMXh6YmhlcTMpIDI1JSwgdmFyKC0tXzF4emJoZXE1KSA1MCUsIHZhcigtLV8xeHpiaGVxMykgNzUlKTsKICBiYWNrZ3JvdW5kLXNpemU6IDQwMCU7CiAgd2lsbC1jaGFuZ2U6IGJhY2tncm91bmQtcG9zaXRpb247Cn0KLmVrbGExbjMgewogIHVzZXItc2VsZWN0OiBub25lOwp9\\\"}!../../../../node_modules/@vanilla-extract/webpack-plugin/extracted.js\"\nexport var filterButtonLoading = 'ekla1n3 ekla1n1 _1xzbheq80x _1xzbheq7z9 _1xzbheq4g3 _1xzbheq88d';","export const roundWholePercentage = (n: number): string => {\n  if (n === 0) return '0'\n  if (!n) return ''\n  if (n < 1) {\n    return '<1'\n  }\n  return Math.round(n).toString()\n}\n","import \"src/nft/css/sprinkles.css.ts.vanilla.css!=!../../../../node_modules/@vanilla-extract/webpack-plugin/virtualFileLoader/dist/vanilla-extract-webpack-plugin-virtualFileLoader.cjs.js?{\\\"fileName\\\":\\\"src/nft/css/sprinkles.css.ts.vanilla.css\\\",\\\"source\\\":\\\"#\\\"}!../../../../node_modules/@vanilla-extract/webpack-plugin/extracted.js\"\nimport \"src/nft/css/common.css.ts.vanilla.css!=!../../../../node_modules/@vanilla-extract/webpack-plugin/virtualFileLoader/dist/vanilla-extract-webpack-plugin-virtualFileLoader.cjs.js?{\\\"fileName\\\":\\\"src/nft/css/common.css.ts.vanilla.css\\\",\\\"source\\\":\\\"Ll8xZ25yNnJjYTo6YmVmb3JlIHsKICBjb250ZW50OiAiIjsKICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgaW5zZXQ6IC0xcHg7CiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDQ1ZGVnLCAjRkM3MkZGODAgMCUsICNGQzcyRkY4MCAxMDAuMTMlKSBib3JkZXItYm94OwogIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQ7CiAgLXdlYmtpdC1tYXNrOiBsaW5lYXItZ3JhZGllbnQoI2ZmZiAwIDApIHBhZGRpbmctYm94LCBsaW5lYXItZ3JhZGllbnQoI2ZmZiAwIDApOzsKICAtd2Via2l0LW1hc2stY29tcG9zaXRlOiB4b3I7OwogIG1hc2stY29tcG9zaXRlOiBleGNsdWRlOwogIGJvcmRlci1zdHlsZTogc29saWQ7CiAgYm9yZGVyLXdpZHRoOiAxcHg7CiAgYm9yZGVyLXJhZGl1czogaW5oZXJpdDsKICBwb2ludGVyLWV2ZW50czogbm9uZTsKfQouXzFnbnI2cmNiOjpiZWZvcmUgewogIG9wYWNpdHk6IDA7CiAgLXdlYmtpdC10cmFuc2l0aW9uOiBvcGFjaXR5IDAuMjVzIGVhc2U7CiAgLW1vei10cmFuc2l0aW9uOiBvcGFjaXR5IDAuMjVzIGVhc2U7CiAgLW1zLXRyYW5zaXRpb246IG9wYWNpdHkgMC4yNXMgZWFzZTsKICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuMjVzIGVhc2Utb3V0Owp9Ci5fMWducjZyY2I6aG92ZXI6OmJlZm9yZSB7CiAgb3BhY2l0eTogMTsKfQ==\\\"}!../../../../node_modules/@vanilla-extract/webpack-plugin/extracted.js\"\nimport \"src/nft/css/loading.css.ts.vanilla.css!=!../../../../node_modules/@vanilla-extract/webpack-plugin/virtualFileLoader/dist/vanilla-extract-webpack-plugin-virtualFileLoader.cjs.js?{\\\"fileName\\\":\\\"src/nft/css/loading.css.ts.vanilla.css\\\",\\\"source\\\":\\\"QGtleWZyYW1lcyBla2xhMW4wIHsKICAwJSB7CiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAxMDAlIDUwJTsKICB9CiAgMTAwJSB7CiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAwJSA1MCU7CiAgfQp9Ci5la2xhMW4xIHsKICBhbmltYXRpb246IGVrbGExbjAgMS41cyBpbmZpbml0ZTsKICBhbmltYXRpb24tZmlsbC1tb2RlOiBib3RoOwogIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCh0byBsZWZ0LCB2YXIoLS1fMXh6YmhlcTMpIDI1JSwgdmFyKC0tXzF4emJoZXE1KSA1MCUsIHZhcigtLV8xeHpiaGVxMykgNzUlKTsKICBiYWNrZ3JvdW5kLXNpemU6IDQwMCU7CiAgd2lsbC1jaGFuZ2U6IGJhY2tncm91bmQtcG9zaXRpb247Cn0KLmVrbGExbjMgewogIHVzZXItc2VsZWN0OiBub25lOwp9\\\"}!../../../../node_modules/@vanilla-extract/webpack-plugin/extracted.js\"\nimport \"src/nft/components/collection/CollectionStats.css.ts.vanilla.css!=!../../../../node_modules/@vanilla-extract/webpack-plugin/virtualFileLoader/dist/vanilla-extract-webpack-plugin-virtualFileLoader.cjs.js?{\\\"fileName\\\":\\\"src/nft/components/collection/CollectionStats.css.ts.vanilla.css\\\",\\\"source\\\":\\\"LmRwa2ZwNTMgewogIHdpZHRoOiAxNDNweDsKICBoZWlnaHQ6IDE0M3B4OwogIHZlcnRpY2FsLWFsaWduOiB0b3A7CiAgdG9wOiAtMTE4cHg7CiAgYm94LXNoYWRvdzogdmFyKC0tXzF4emJoZXFtKTsKfQouZHBrZnA1NSB7CiAgbGluZS1oZWlnaHQ6IDIwcHg7Cn0KLmRwa2ZwNTYgewogIGxpbmUtaGVpZ2h0OiAyNHB4OwogIHdoaXRlLXNwYWNlOiBub3dyYXA7Cn0KLmRwa2ZwNWMgewogIG1heC13aWR0aDogbWluKGNhbGMoMTAwJSAtIDExMnB4KSwgNjAwcHgpOwp9Ci5kcGtmcDVpIHsKICB3aWR0aDogMjM2cHg7Cn0KQG1lZGlhIChtYXgtd2lkdGg6IDYzOXB4KSB7CiAgLmRwa2ZwNTEgewogICAgbWFyZ2luLWxlZnQ6IDY4cHg7CiAgfQogIC5kcGtmcDUzIHsKICAgIHdpZHRoOiA2MHB4OwogICAgaGVpZ2h0OiA2MHB4OwogICAgYm9yZGVyLXdpZHRoOiAycHg7CiAgICB0b3A6IC0yMHB4OwogIH0KfQ==\\\"}!../../../../node_modules/@vanilla-extract/webpack-plugin/extracted.js\"\nexport var baseCollectionImage = '_1xzbheq343 _1xzbheq7zp _1xzbheq89l _1xzbheq553 _1xzbheq81x _1xzbheq48l';\nexport var collectionImage = 'dpkfp53 _1xzbheq343 _1xzbheq7zp _1xzbheq89l _1xzbheq553 _1xzbheq81x _1xzbheq48l';\nexport var collectionImageIsLoading = 'ekla1n1 dpkfp53 _1xzbheq343 _1xzbheq7zp _1xzbheq89l _1xzbheq553 _1xzbheq81x _1xzbheq48l dpkfp5f';\nexport var collectionImageIsLoadingBackground = 'dpkfp53 _1xzbheq343 _1xzbheq7zp _1xzbheq89l _1xzbheq553 _1xzbheq81x _1xzbheq48l _1xzbheq6rr';\nexport var descriptionLoading = 'dpkfp5c ekla1n3 ekla1n1 _1xzbheq80x _1xzbheq7z9 _1xzbheq4g3 _1xzbheq199';\nexport var nameTextLoading = 'dpkfp5i ekla1n3 ekla1n1 _1xzbheq80x _1xzbheq7z9 _1xzbheq4g3 _1xzbheq19x';\nexport var statsLabel = 'dpkfp55 _1xzbheqd3 _1xzbheqb9 _1xzbheqdr _1xzbheq4bf _1xzbheq45l';\nexport var statsLabelLoading = 'ekla1n3 ekla1n1 _1xzbheq80x _1xzbheq7z9 _1xzbheq4g3 _1xzbheq14f _1xzbheq18x';\nexport var statsText = 'dpkfp51 _1xzbheqwf _1xzbheqya _1xzbheqf3 _1xzbheqha';\nexport var statsValue = 'dpkfp56 _1xzbheqd9 _1xzbheqbl _1xzbheqef';\nexport var statsValueLoading = 'ekla1n3 ekla1n1 _1xzbheq80x _1xzbheq7z9 _1xzbheq4g3 _1xzbheq14f _1xzbheq199 _1xzbheqwf';","import { DeltaArrow } from 'components/Tokens/TokenDetails/Delta'\nimport { useScreenSize } from 'hooks/useScreenSize'\nimport { Box, BoxProps } from 'nft/components/Box'\nimport { Column, Row } from 'nft/components/Flex'\nimport { body, bodySmall, headlineMedium, headlineSmall } from 'nft/css/common.css'\nimport { loadingAsset } from 'nft/css/loading.css'\nimport { themeVars } from 'nft/css/sprinkles.css'\nimport { useBag, useIsMobile } from 'nft/hooks'\nimport { useIsCollectionLoading } from 'nft/hooks/useIsCollectionLoading'\nimport { GenieCollection, TokenType } from 'nft/types'\nimport { roundWholePercentage } from 'nft/utils/numbers'\nimport { ReactNode, useEffect, useReducer, useRef, useState } from 'react'\nimport ReactMarkdown from 'react-markdown'\nimport styled, { css } from 'styled-components'\nimport { ThemedText } from 'theme/components'\nimport { NumberType, useFormatter } from 'utils/formatNumbers'\n\nimport { DiscordIcon, EllipsisIcon, ExternalIcon, InstagramIcon, TwitterIcon, VerifiedIcon, XMarkIcon } from '../icons'\nimport * as styles from './CollectionStats.css'\n\nconst PercentChange = styled.div<{ isNegative: boolean }>`\n  color: ${({ theme, isNegative }) => (isNegative ? theme.critical : theme.success)};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n\nconst CollectionNameText = styled.div<{ isVerified: boolean }>`\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  margin-right: ${({ isVerified }) => (isVerified ? '6px' : '0px')};\n`\n\nconst CollectionNameTextLoading = styled.div`\n  ${loadingAsset}\n  height: 32px;\n  width: 236px;\n`\n\nconst MobileSocialsOverflowIcon = styled.div`\n  display: flex;\n  margin-left: 4px;\n  flex-direction: column;\n  justify-content: center;\n  height: 28px;\n`\n\nconst MobileSocialsIcon = ({ children, href }: { children: ReactNode; href: string }) => {\n  return (\n    <Box\n      display=\"flex\"\n      as=\"a\"\n      target=\"_blank\"\n      rel=\"noreferrer\"\n      href={href}\n      height=\"40\"\n      width=\"40\"\n      borderRadius=\"round\"\n      backgroundColor=\"surface1\"\n    >\n      {children}\n    </Box>\n  )\n}\n\nconst MobileSocialsPopover = ({\n  collectionStats,\n  collectionSocialsIsOpen,\n  toggleCollectionSocials,\n}: {\n  collectionStats: GenieCollection\n  collectionSocialsIsOpen: boolean\n  toggleCollectionSocials: () => void\n}) => {\n  return (\n    <>\n      <MobileSocialsOverflowIcon onClick={toggleCollectionSocials}>\n        {collectionSocialsIsOpen ? (\n          <XMarkIcon width=\"28\" height=\"28\" fill={themeVars.colors.neutral2} />\n        ) : (\n          <EllipsisIcon width=\"28\" height=\"20\" fill={themeVars.colors.neutral2} />\n        )}\n      </MobileSocialsOverflowIcon>\n      {collectionSocialsIsOpen && (\n        <Row\n          position=\"absolute\"\n          gap=\"4\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          style={{\n            top: '-48px',\n            right: '-6px',\n          }}\n        >\n          {collectionStats.discordUrl ? (\n            <MobileSocialsIcon href={collectionStats.discordUrl}>\n              <Box margin=\"auto\" paddingTop=\"4\">\n                <DiscordIcon width={28} height={28} color={themeVars.colors.neutral2} />\n              </Box>\n            </MobileSocialsIcon>\n          ) : null}\n          {collectionStats.twitterUrl ? (\n            <MobileSocialsIcon href={'https://twitter.com/' + collectionStats.twitterUrl}>\n              <Box margin=\"auto\" paddingTop=\"6\">\n                <TwitterIcon\n                  fill={themeVars.colors.neutral2}\n                  color={themeVars.colors.neutral2}\n                  width=\"28px\"\n                  height=\"28px\"\n                />\n              </Box>\n            </MobileSocialsIcon>\n          ) : null}\n\n          {collectionStats.instagram ? (\n            <MobileSocialsIcon href={'https://instagram.com/' + collectionStats.instagram}>\n              <Box margin=\"auto\" paddingLeft=\"2\" paddingTop=\"4\">\n                <InstagramIcon fill={themeVars.colors.neutral2} width=\"28px\" height=\"28px\" />\n              </Box>\n            </MobileSocialsIcon>\n          ) : null}\n\n          {collectionStats.externalUrl ? (\n            <MobileSocialsIcon href={collectionStats.externalUrl}>\n              <Box margin=\"auto\" paddingTop=\"4\">\n                <ExternalIcon fill={themeVars.colors.neutral2} width=\"28px\" height=\"28px\" />\n              </Box>\n            </MobileSocialsIcon>\n          ) : null}\n        </Row>\n      )}\n    </>\n  )\n}\n\nconst SocialsIcon = ({ children, href }: { children: ReactNode; href: string }) => {\n  return (\n    <Column as=\"a\" target=\"_blank\" rel=\"noreferrer\" href={href} height=\"full\" justifyContent=\"center\">\n      {children}\n    </Column>\n  )\n}\n\nconst CollectionName = ({\n  collectionStats,\n  name,\n  isVerified,\n  isMobile,\n  collectionSocialsIsOpen,\n  toggleCollectionSocials,\n}: {\n  collectionStats: GenieCollection\n  name: string\n  isVerified: boolean\n  isMobile: boolean\n  collectionSocialsIsOpen: boolean\n  toggleCollectionSocials: () => void\n}) => {\n  const isCollectionStatsLoading = useIsCollectionLoading((state) => state.isCollectionStatsLoading)\n\n  return (\n    <Row justifyContent=\"space-between\">\n      <Row minWidth=\"0\">\n        {isCollectionStatsLoading ? (\n          <CollectionNameTextLoading />\n        ) : (\n          <CollectionNameText isVerified={isVerified} className={isMobile ? headlineSmall : headlineMedium}>\n            {name}\n          </CollectionNameText>\n        )}\n        {isVerified && <VerifiedIcon style={{ width: '32px', height: '32px' }} />}\n        <Row\n          display={{ sm: 'none', md: 'flex' }}\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          marginLeft=\"32\"\n          gap=\"8\"\n          height=\"32\"\n        >\n          {collectionStats.discordUrl ? (\n            <SocialsIcon href={collectionStats.discordUrl ?? ''}>\n              <DiscordIcon\n                fill={themeVars.colors.neutral2}\n                color={themeVars.colors.neutral2}\n                width=\"26px\"\n                height=\"26px\"\n              />\n            </SocialsIcon>\n          ) : null}\n          {collectionStats.twitterUrl ? (\n            <SocialsIcon href={'https://twitter.com/' + collectionStats.twitterUrl}>\n              <TwitterIcon\n                fill={themeVars.colors.neutral2}\n                color={themeVars.colors.neutral2}\n                width=\"26px\"\n                height=\"26px\"\n              />\n            </SocialsIcon>\n          ) : null}\n\n          {collectionStats.instagram ? (\n            <SocialsIcon href={'https://instagram.com/' + collectionStats.instagram}>\n              <InstagramIcon fill={themeVars.colors.neutral2} width=\"26px\" height=\"26px\" />\n            </SocialsIcon>\n          ) : null}\n          {collectionStats.externalUrl ? (\n            <SocialsIcon href={collectionStats.externalUrl ?? ''}>\n              <ExternalIcon fill={themeVars.colors.neutral2} width=\"26px\" height=\"26px\" />\n            </SocialsIcon>\n          ) : null}\n        </Row>\n      </Row>\n      {isMobile &&\n        (collectionStats.discordUrl ||\n          collectionStats.twitterUrl ||\n          collectionStats.instagram ||\n          collectionStats.externalUrl) && (\n          <MobileSocialsPopover\n            collectionStats={collectionStats}\n            collectionSocialsIsOpen={collectionSocialsIsOpen}\n            toggleCollectionSocials={toggleCollectionSocials}\n          />\n        )}\n    </Row>\n  )\n}\n\nconst CollectionDescriptionText = styled.div<{ readMore: boolean }>`\n  vertical-align: top;\n  text-overflow: ellipsis;\n\n  ${({ readMore }) =>\n    readMore\n      ? css`\n          white-space: normal;\n          overflow: visible;\n          display: inline;\n          max-width: 100%;\n        `\n      : css`\n          white-space: nowrap;\n          overflow: hidden;\n          display: inline-block;\n          max-width: min(calc(100% - 112px), 600px);\n        `}\n\n  a[href] {\n    color: ${({ theme }) => theme.neutral2};\n    text-decoration: none;\n\n    :hover {\n      opacity: ${({ theme }) => theme.opacity.hover};\n    }\n\n    :focus {\n      opacity: ${({ theme }) => theme.opacity.click};\n    }\n  }\n`\n\nconst ReadMore = styled.span`\n  vertical-align: top;\n  color: ${({ theme }) => theme.neutral2};\n  cursor: pointer;\n  margin-left: 4px;\n`\n\nconst CollectionDescriptionLoading = () => (\n  <Box marginTop={{ sm: '12', md: '16' }} className={styles.descriptionLoading} />\n)\n\nconst CollectionDescription = ({ description }: { description: string }) => {\n  const [showReadMore, setShowReadMore] = useState(false)\n  const [readMore, toggleReadMore] = useReducer((state) => !state, false)\n  const baseRef = useRef<HTMLDivElement>(null)\n  const descriptionRef = useRef<HTMLDivElement>(null)\n  const isCollectionStatsLoading = useIsCollectionLoading((state) => state.isCollectionStatsLoading)\n  const isMobile = useIsMobile()\n\n  useEffect(() => {\n    if (\n      baseRef &&\n      descriptionRef &&\n      baseRef.current &&\n      descriptionRef.current &&\n      (descriptionRef.current.getBoundingClientRect().width >= baseRef.current?.getBoundingClientRect().width - 112 ||\n        descriptionRef.current.getBoundingClientRect().width >= 590)\n    )\n      setShowReadMore(true)\n    else setShowReadMore(false)\n  }, [descriptionRef, baseRef, isCollectionStatsLoading, description])\n\n  return isCollectionStatsLoading ? (\n    <CollectionDescriptionLoading />\n  ) : (\n    <Box ref={baseRef} marginTop={{ sm: '12', md: '16' }} style={{ maxWidth: '680px' }}>\n      <CollectionDescriptionText readMore={readMore} ref={descriptionRef} className={isMobile ? bodySmall : body}>\n        <ReactMarkdown\n          source={description}\n          allowedTypes={['link', 'paragraph', 'strong', 'code', 'emphasis', 'text']}\n          renderers={{ paragraph: 'span' }}\n        />\n      </CollectionDescriptionText>\n      {showReadMore && (\n        <ReadMore className={isMobile ? bodySmall : body} onClick={toggleReadMore}>\n          show {readMore ? 'less' : 'more'}\n        </ReadMore>\n      )}\n    </Box>\n  )\n}\n\nconst StatsItem = ({ children, label, shouldHide }: { children: ReactNode; label: string; shouldHide: boolean }) => {\n  return (\n    <Box display={shouldHide ? 'none' : 'flex'} flexDirection=\"column\" alignItems=\"baseline\" gap=\"2\" height=\"min\">\n      <ThemedText.SubHeader className={styles.statsValue}>{children}</ThemedText.SubHeader>\n      <Box as=\"span\" className={styles.statsLabel}>\n        {label}\n      </Box>\n    </Box>\n  )\n}\n\nconst statsLoadingSkeleton = (isMobile: boolean) =>\n  new Array(isMobile ? 3 : 5).fill(null).map((_, index) => (\n    <Box\n      display=\"flex\"\n      flexDirection=\"column\"\n      alignItems=\"baseline\"\n      gap=\"2\"\n      height=\"min\"\n      key={`statsLoadingSkeleton-key-${index}`}\n      marginBottom={isMobile ? '12' : '0'}\n    >\n      <div className={styles.statsLabelLoading} />\n      <span className={styles.statsValueLoading} />\n    </Box>\n  ))\n\nconst StatsRow = ({ stats, isMobile, ...props }: { stats: GenieCollection; isMobile?: boolean } & BoxProps) => {\n  const { formatNumberOrString, formatDelta } = useFormatter()\n\n  const uniqueOwnersPercentage = stats?.stats?.total_supply\n    ? roundWholePercentage(((stats.stats.num_owners ?? 0) / stats.stats.total_supply) * 100)\n    : 0\n  const totalSupplyStr = stats.stats\n    ? formatNumberOrString({ input: stats.stats.total_supply ?? 0, type: NumberType.NFTCollectionStats })\n    : 0\n  const listedPercentageStr = stats?.stats?.total_supply\n    ? roundWholePercentage(((stats.stats.total_listings ?? 0) / stats.stats.total_supply) * 100)\n    : 0\n  const isCollectionStatsLoading = useIsCollectionLoading((state) => state.isCollectionStatsLoading)\n\n  // round daily volume & floorPrice to 3 decimals or less\n  const totalVolumeStr = formatNumberOrString({\n    input: Number(stats.stats?.total_volume) ?? 0,\n    type: NumberType.NFTCollectionStats,\n  })\n  const floorPriceStr = formatNumberOrString({\n    input: stats.stats?.floor_price ?? 0,\n    type: NumberType.NFTTokenFloorPrice,\n  })\n  // graphQL formatted %age values out of 100, whereas v3 endpoint did a decimal between 0 & 1\n  const floorChangeStr = formatDelta(Math.round(Math.abs(stats?.stats?.one_day_floor_change ?? 0)))\n\n  const isBagExpanded = useBag((state) => state.bagExpanded)\n  const isScreenSize = useScreenSize()\n  const isSmallContainer = isMobile || (!isScreenSize['lg'] && isBagExpanded)\n\n  return (\n    <Row gap={{ sm: '24', md: '36', lg: '48', xl: '60' }} {...props}>\n      {isCollectionStatsLoading ? (\n        statsLoadingSkeleton(isMobile ?? false)\n      ) : (\n        <>\n          {stats.stats?.floor_price ? (\n            <StatsItem label=\"Global floor\" shouldHide={false}>\n              {floorPriceStr} ETH\n            </StatsItem>\n          ) : null}\n          {stats.stats?.one_day_floor_change !== undefined ? (\n            <StatsItem label=\"Floor 24H\" shouldHide={false}>\n              <PercentChange isNegative={stats.stats.one_day_floor_change < 0}>\n                <DeltaArrow delta={stats?.stats?.one_day_floor_change} />\n                {floorChangeStr}\n              </PercentChange>\n            </StatsItem>\n          ) : null}\n          {stats.stats?.total_volume ? (\n            <StatsItem label=\"Total volume\" shouldHide={false}>\n              {totalVolumeStr} ETH\n            </StatsItem>\n          ) : null}\n          {totalSupplyStr ? (\n            <StatsItem label=\"Items\" shouldHide={isMobile ?? false}>\n              {totalSupplyStr}\n            </StatsItem>\n          ) : null}\n          {uniqueOwnersPercentage && stats.standard !== TokenType.ERC1155 ? (\n            <StatsItem label=\"Unique owners\" shouldHide={isSmallContainer ?? false}>\n              {uniqueOwnersPercentage}%\n            </StatsItem>\n          ) : null}\n          {stats.stats?.total_listings && stats.standard !== TokenType.ERC1155 ? (\n            <StatsItem label=\"Listed\" shouldHide={isSmallContainer ?? false}>\n              {listedPercentageStr}%\n            </StatsItem>\n          ) : null}\n        </>\n      )}\n    </Row>\n  )\n}\n\nexport const CollectionStatsLoading = ({ isMobile }: { isMobile: boolean }) => {\n  return (\n    <Column position=\"relative\" width=\"full\">\n      <Box className={styles.collectionImageIsLoadingBackground} />\n      <Box className={styles.collectionImageIsLoading} />\n      <Box className={styles.statsText}>\n        <Box className={styles.nameTextLoading} />\n        {!isMobile && (\n          <>\n            <CollectionDescriptionLoading />\n            <Row gap=\"60\" marginTop=\"20\">\n              {statsLoadingSkeleton(false)}\n            </Row>\n          </>\n        )}\n      </Box>\n      {isMobile && (\n        <>\n          <CollectionDescriptionLoading />\n          <Row gap=\"20\" marginTop=\"20\">\n            {statsLoadingSkeleton(true)}\n          </Row>\n        </>\n      )}\n    </Column>\n  )\n}\n\nexport const CollectionStats = ({ stats, isMobile }: { stats: GenieCollection; isMobile: boolean }) => {\n  const [collectionSocialsIsOpen, toggleCollectionSocials] = useReducer((state) => !state, false)\n  const isCollectionStatsLoading = useIsCollectionLoading((state) => state.isCollectionStatsLoading)\n\n  return (\n    <Box\n      display=\"flex\"\n      marginTop={isMobile && !stats.bannerImageUrl ? (collectionSocialsIsOpen ? '52' : '20') : '0'}\n      justifyContent=\"center\"\n      position=\"relative\"\n      flexDirection=\"column\"\n      width=\"full\"\n    >\n      {isCollectionStatsLoading && (\n        <Box as=\"div\" borderRadius=\"round\" position=\"absolute\" className={styles.collectionImageIsLoadingBackground} />\n      )}\n      <Box\n        as={isCollectionStatsLoading ? 'div' : 'img'}\n        background=\"white\"\n        borderRadius=\"round\"\n        position=\"absolute\"\n        className={isCollectionStatsLoading ? styles.collectionImageIsLoading : styles.collectionImage}\n        src={stats.imageUrl}\n      />\n      <Box className={styles.statsText}>\n        <CollectionName\n          collectionStats={stats}\n          name={stats.name ?? ''}\n          isVerified={stats.isVerified ?? false}\n          isMobile={isMobile}\n          collectionSocialsIsOpen={collectionSocialsIsOpen}\n          toggleCollectionSocials={toggleCollectionSocials}\n        />\n        {(stats.description || isCollectionStatsLoading) && !isMobile && (\n          <CollectionDescription description={stats.description ?? ''} />\n        )}\n        <StatsRow display={{ sm: 'none', md: 'flex' }} overflow=\"hidden\" stats={stats} marginTop=\"20\" />\n      </Box>\n      {(stats.description || isCollectionStatsLoading) && isMobile && (\n        <CollectionDescription description={stats.description ?? ''} />\n      )}\n      <div id=\"nft-anchor-mobile\" />\n      <StatsRow isMobile display={{ sm: 'flex', md: 'none' }} stats={stats} marginTop=\"20\" marginBottom=\"12\" />\n    </Box>\n  )\n}\n","import \"src/nft/css/sprinkles.css.ts.vanilla.css!=!../../../../node_modules/@vanilla-extract/webpack-plugin/virtualFileLoader/dist/vanilla-extract-webpack-plugin-virtualFileLoader.cjs.js?{\\\"fileName\\\":\\\"src/nft/css/sprinkles.css.ts.vanilla.css\\\",\\\"source\\\":\\\"#\\\"}!../../../../node_modules/@vanilla-extract/webpack-plugin/extracted.js\"\nimport \"src/nft/css/common.css.ts.vanilla.css!=!../../../../node_modules/@vanilla-extract/webpack-plugin/virtualFileLoader/dist/vanilla-extract-webpack-plugin-virtualFileLoader.cjs.js?{\\\"fileName\\\":\\\"src/nft/css/common.css.ts.vanilla.css\\\",\\\"source\\\":\\\"Ll8xZ25yNnJjYTo6YmVmb3JlIHsKICBjb250ZW50OiAiIjsKICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgaW5zZXQ6IC0xcHg7CiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDQ1ZGVnLCAjRkM3MkZGODAgMCUsICNGQzcyRkY4MCAxMDAuMTMlKSBib3JkZXItYm94OwogIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQ7CiAgLXdlYmtpdC1tYXNrOiBsaW5lYXItZ3JhZGllbnQoI2ZmZiAwIDApIHBhZGRpbmctYm94LCBsaW5lYXItZ3JhZGllbnQoI2ZmZiAwIDApOzsKICAtd2Via2l0LW1hc2stY29tcG9zaXRlOiB4b3I7OwogIG1hc2stY29tcG9zaXRlOiBleGNsdWRlOwogIGJvcmRlci1zdHlsZTogc29saWQ7CiAgYm9yZGVyLXdpZHRoOiAxcHg7CiAgYm9yZGVyLXJhZGl1czogaW5oZXJpdDsKICBwb2ludGVyLWV2ZW50czogbm9uZTsKfQouXzFnbnI2cmNiOjpiZWZvcmUgewogIG9wYWNpdHk6IDA7CiAgLXdlYmtpdC10cmFuc2l0aW9uOiBvcGFjaXR5IDAuMjVzIGVhc2U7CiAgLW1vei10cmFuc2l0aW9uOiBvcGFjaXR5IDAuMjVzIGVhc2U7CiAgLW1zLXRyYW5zaXRpb246IG9wYWNpdHkgMC4yNXMgZWFzZTsKICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuMjVzIGVhc2Utb3V0Owp9Ci5fMWducjZyY2I6aG92ZXI6OmJlZm9yZSB7CiAgb3BhY2l0eTogMTsKfQ==\\\"}!../../../../node_modules/@vanilla-extract/webpack-plugin/extracted.js\"\nexport var priceInput = '_1xzbheqd3 _1xzbheqbf _1xzbheqe9 _1xzbheq6w3 _1xzbheq2u9 _1xzbheq80x _1xzbheq7zp _1xzbheq899';","import clsx from 'clsx'\nimport { Box } from 'nft/components/Box'\nimport * as styles from 'nft/components/collection/Filters.css'\nimport { ChevronUpIcon } from 'nft/components/icons'\nimport { subheadSmall } from 'nft/css/common.css'\nimport { useIsMobile } from 'nft/hooks'\nimport { TraitPosition, useTraitsOpen } from 'nft/hooks/useTraitsOpen'\nimport { ReactNode, useEffect, useState } from 'react'\nimport styled from 'styled-components'\n\nconst ChildreMobileWrapper = styled.div<{ isMobile: boolean }>`\n  padding: ${({ isMobile }) => (isMobile ? '0px 16px 0px 12px' : '0px')};\n`\n\ninterface TraitsHeaderProps {\n  title: string\n  children: ReactNode\n  numTraits?: number\n  index?: number\n}\n\nexport const TraitsHeader = (props: TraitsHeaderProps) => {\n  const { children, index, title } = props\n  const [isOpen, setOpen] = useState(false)\n  const traitsOpen = useTraitsOpen((state) => state.traitsOpen)\n  const setTraitsOpen = useTraitsOpen((state) => state.setTraitsOpen)\n  const isMobile = useIsMobile()\n\n  const prevTraitIsOpen = index !== undefined ? traitsOpen[index - 1] : false\n  const showBorderTop = index !== TraitPosition.TRAIT_START_INDEX\n\n  useEffect(() => {\n    if (index !== undefined) {\n      setTraitsOpen(index, isOpen)\n    }\n  }, [isOpen, index, setTraitsOpen])\n\n  return (\n    <>\n      {showBorderTop && (\n        <Box\n          className={clsx(subheadSmall, !isOpen && styles.rowHover, styles.detailsOpen)}\n          opacity={!prevTraitIsOpen && isOpen && index !== 0 ? '1' : '0'}\n          marginTop={prevTraitIsOpen ? '0' : '8'}\n        />\n      )}\n\n      <Box as=\"details\" className={clsx(subheadSmall, !isOpen && styles.rowHover)} open={isOpen}>\n        <Box\n          as=\"summary\"\n          className={`${styles.row} ${styles.rowHover}`}\n          onClick={(e) => {\n            e.preventDefault()\n            setOpen(!isOpen)\n          }}\n        >\n          {title}\n\n          <Box display=\"flex\" alignItems=\"center\">\n            <Box color=\"neutral2\" display=\"inline-block\" marginRight=\"12\">\n              {props.numTraits}\n            </Box>\n            <Box\n              className={styles.chevronContainer}\n              style={{\n                transform: `rotate(${isOpen ? 0 : 180}deg)`,\n              }}\n            >\n              <ChevronUpIcon className={styles.chevronIcon} />\n            </Box>\n          </Box>\n        </Box>\n        <ChildreMobileWrapper isMobile={isMobile}>{children}</ChildreMobileWrapper>\n      </Box>\n    </>\n  )\n}\n","import 'rc-slider/assets/index.css'\n\nimport { NFTEventName, NFTFilterTypes } from '@uniswap/analytics-events'\nimport { sendAnalyticsEvent } from 'analytics'\nimport { Box } from 'nft/components/Box'\nimport { Row } from 'nft/components/Flex'\nimport { NumericInput } from 'nft/components/layout/Input'\nimport { body } from 'nft/css/common.css'\nimport { useCollectionFilters } from 'nft/hooks/useCollectionFilters'\nimport { usePriceRange } from 'nft/hooks/usePriceRange'\nimport { TraitPosition } from 'nft/hooks/useTraitsOpen'\nimport { scrollToTop } from 'nft/utils/scrollToTop'\nimport { default as Slider } from 'rc-slider'\nimport { FocusEventHandler, FormEvent, useEffect, useState } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport styled, { useTheme } from 'styled-components'\nimport { darkDeprecatedTheme } from 'theme/deprecatedColors'\n\nimport * as styles from './PriceRange.css'\nimport { TraitsHeader } from './TraitsHeader'\n\nconst StyledSlider = styled(Slider)`\n  cursor: pointer;\n`\n\nexport const PriceRange = () => {\n  const [placeholderText, setPlaceholderText] = useState('')\n  const setMinPrice = useCollectionFilters((state) => state.setMinPrice)\n  const setMaxPrice = useCollectionFilters((state) => state.setMaxPrice)\n  const minPrice = useCollectionFilters((state) => state.minPrice)\n  const maxPrice = useCollectionFilters((state) => state.maxPrice)\n  const priceRangeLow = usePriceRange((state) => state.priceRangeLow)\n  const priceRangeHigh = usePriceRange((state) => state.priceRangeHigh)\n  const setPriceRangeLow = usePriceRange((statae) => statae.setPriceRangeLow)\n  const setPriceRangeHigh = usePriceRange((statae) => statae.setPriceRangeHigh)\n  const prevMinMax = usePriceRange((state) => state.prevMinMax)\n  const setPrevMinMax = usePriceRange((state) => state.setPrevMinMax)\n  const theme = useTheme()\n\n  const location = useLocation()\n\n  useEffect(() => {\n    setMinPrice('')\n    setMaxPrice('')\n    setPriceRangeLow('')\n    setPriceRangeHigh('')\n  }, [location.pathname, setMinPrice, setMaxPrice, setPriceRangeLow, setPriceRangeHigh])\n\n  const handleFocus: FocusEventHandler<HTMLInputElement> = (e) => {\n    setPlaceholderText(e.currentTarget.placeholder)\n    e.currentTarget.placeholder = ''\n  }\n\n  const handleBlur: FocusEventHandler<HTMLInputElement> = (e) => {\n    e.currentTarget.placeholder = placeholderText\n    setPlaceholderText('')\n    if (minPrice || maxPrice)\n      sendAnalyticsEvent(NFTEventName.NFT_FILTER_SELECTED, { filter_type: NFTFilterTypes.PRICE_RANGE })\n  }\n\n  const updateMinPriceRange = (v: FormEvent<HTMLInputElement>) => {\n    const [, prevMax] = prevMinMax\n\n    // if there is actually a number, update the slider place\n    if (v.currentTarget.value) {\n      // we are calculating the new slider position here\n      const diff = parseInt(v.currentTarget.value) - parseInt(priceRangeLow)\n      const newLow = Math.floor(100 * (diff / (parseInt(priceRangeHigh) - parseInt(priceRangeLow))))\n\n      // if the slider min value is larger than or equal to the max, we don't want it to move past the max\n      // so we put the sliders on top of each other\n      // if it is less than, we can move it\n      if (parseInt(v.currentTarget.value) >= parseInt(maxPrice)) {\n        setPrevMinMax([prevMax, prevMax])\n      } else {\n        setPrevMinMax([newLow, prevMax])\n      }\n    } else {\n      // if there is no number, reset the slider position\n      setPrevMinMax([0, prevMax])\n    }\n\n    // set min price for price range querying\n    setMinPrice(v.currentTarget.value.toString())\n    scrollToTop()\n  }\n\n  const updateMaxPriceRange = (v: FormEvent<HTMLInputElement>) => {\n    const [prevMin] = prevMinMax\n\n    if (v.currentTarget.value) {\n      const range = parseInt(priceRangeHigh) - parseInt(v.currentTarget.value)\n      const newMax = Math.floor(100 - 100 * (range / (parseInt(priceRangeHigh) - parseInt(priceRangeLow))))\n\n      if (parseInt(v.currentTarget.value) <= parseInt(minPrice)) {\n        setPrevMinMax([prevMin, prevMin])\n      } else {\n        setPrevMinMax([prevMin, newMax])\n      }\n    } else {\n      setPrevMinMax([prevMin, 100])\n    }\n\n    setMaxPrice(v.currentTarget.value)\n    scrollToTop()\n  }\n\n  const handleSliderLogic = (minMax: number | Array<number>) => {\n    if (typeof minMax === 'number') return\n\n    const [newMin, newMax] = minMax\n\n    // strip commas so parseFloat can parse properly\n    const priceRangeHighNumber = parseFloat(priceRangeHigh.replace(/,/g, ''))\n    const priceRangeLowNumber = parseFloat(priceRangeLow.replace(/,/g, ''))\n    const diff = priceRangeHighNumber - priceRangeLowNumber\n\n    // minprice\n    const minChange = newMin / 100\n    const newMinPrice = minChange * diff + priceRangeLowNumber\n\n    // max price\n    const maxChange = (100 - newMax) / 100\n    const newMaxPrice = priceRangeHighNumber - maxChange * diff\n\n    setMinPrice(newMinPrice.toFixed(2).toString())\n    setMaxPrice(newMaxPrice.toFixed(2).toString())\n\n    // set back to placeholder when they move back to end of range\n    if (newMin === 0) {\n      setMinPrice('')\n    }\n    if (newMax === 100) {\n      setMaxPrice('')\n    }\n\n    // update the previous minMax for future checks\n    setPrevMinMax(minMax)\n  }\n\n  return (\n    <TraitsHeader title=\"Price range\" index={TraitPosition.PRICE_RANGE_INDEX}>\n      <Row marginTop=\"12\" color=\"neutral1\" justifyContent=\"space-between\">\n        <Row position=\"relative\">\n          <NumericInput\n            style={{\n              width: '126px',\n            }}\n            className={styles.priceInput}\n            placeholder={priceRangeLow}\n            onChange={updateMinPriceRange}\n            onFocus={handleFocus}\n            value={minPrice}\n            onBlur={handleBlur}\n          />\n        </Row>\n        <Box className={body}>to</Box>\n        <Row position=\"relative\">\n          <NumericInput\n            style={{\n              width: '126px',\n            }}\n            className={styles.priceInput}\n            placeholder={priceRangeHigh}\n            value={maxPrice}\n            onChange={updateMaxPriceRange}\n            onFocus={handleFocus}\n            onBlur={handleBlur}\n          />\n        </Row>\n      </Row>\n\n      <Row marginTop=\"24\" marginBottom=\"12\" paddingLeft=\"8\" paddingRight=\"8\">\n        <StyledSlider\n          defaultValue={[0, 100]}\n          min={0}\n          max={100}\n          range\n          step={0.0001}\n          value={prevMinMax}\n          trackStyle={{\n            top: '3px',\n            height: '8px',\n            background: `${theme.accent1}`,\n          }}\n          handleStyle={{\n            top: '3px',\n            width: '12px',\n            height: '20px',\n            opacity: '1',\n            backgroundColor: `white`,\n            borderRadius: '4px',\n            border: 'none',\n            boxShadow: darkDeprecatedTheme.deprecated_shallowShadow.slice(0, -1),\n          }}\n          railStyle={{\n            top: '3px',\n            height: '8px',\n            backgroundColor: `${theme.accent2}`,\n          }}\n          onChange={handleSliderLogic}\n        />\n      </Row>\n    </TraitsHeader>\n  )\n}\n","import { NFTEventName, NFTFilterTypes } from '@uniswap/analytics-events'\nimport { sendAnalyticsEvent } from 'analytics'\nimport useDebounce from 'hooks/useDebounce'\nimport { Box } from 'nft/components/Box'\nimport { Column, Row } from 'nft/components/Flex'\nimport { Checkbox } from 'nft/components/layout/Checkbox'\nimport { subheadSmall } from 'nft/css/common.css'\nimport { Trait, useCollectionFilters } from 'nft/hooks/useCollectionFilters'\nimport { pluralize } from 'nft/utils/roundAndPluralize'\nimport { scrollToTop } from 'nft/utils/scrollToTop'\nimport { CSSProperties, FormEvent, MouseEvent, useCallback, useEffect, useMemo, useState } from 'react'\nimport AutoSizer from 'react-virtualized-auto-sizer'\nimport { FixedSizeList } from 'react-window'\n\nimport { Input } from '../layout/Input'\nimport * as styles from './Filters.css'\nimport { TraitsHeader } from './TraitsHeader'\n\nconst TRAIT_ROW_HEIGHT = 44\n\nconst TraitItem = ({\n  trait,\n  addTrait,\n  removeTrait,\n  isTraitSelected,\n  style,\n}: {\n  trait: Trait\n  addTrait: (trait: Trait) => void\n  removeTrait: (trait: Trait) => void\n  isTraitSelected: boolean\n  style?: CSSProperties\n}) => {\n  const [isCheckboxSelected, setCheckboxSelected] = useState(false)\n  const [hovered, setHovered] = useState(false)\n  const handleHover = () => setHovered(!hovered)\n  const toggleShowFullTraitName = useCollectionFilters((state) => state.toggleShowFullTraitName)\n\n  const { shouldShow, trait_value, trait_type } = useCollectionFilters((state) => state.showFullTraitName)\n  const isEllipsisActive = (e: MouseEvent<HTMLElement>) => {\n    if (e.currentTarget.offsetWidth < e.currentTarget.scrollWidth) {\n      toggleShowFullTraitName({\n        shouldShow: true,\n        trait_value: trait.trait_value,\n        trait_type: trait.trait_type,\n      })\n    }\n  }\n  useEffect(() => {\n    setCheckboxSelected(isTraitSelected)\n  }, [isTraitSelected])\n\n  const handleCheckbox = (e: FormEvent) => {\n    e.preventDefault()\n    scrollToTop()\n\n    if (!isCheckboxSelected) {\n      addTrait(trait)\n      setCheckboxSelected(true)\n    } else {\n      removeTrait(trait)\n      setCheckboxSelected(false)\n    }\n    sendAnalyticsEvent(NFTEventName.NFT_FILTER_SELECTED, { filter_type: NFTFilterTypes.TRAIT })\n  }\n\n  const showFullTraitName = shouldShow && trait_type === trait.trait_type && trait_value === trait.trait_value\n\n  return (\n    <Row\n      key={trait.trait_value}\n      maxWidth=\"full\"\n      overflowX=\"hidden\"\n      overflowY=\"hidden\"\n      fontWeight=\"book\"\n      className={`${subheadSmall} ${styles.subRowHover}`}\n      justifyContent=\"space-between\"\n      cursor=\"pointer\"\n      paddingLeft=\"12\"\n      paddingRight=\"16\"\n      borderRadius=\"12\"\n      style={{\n        paddingBottom: '22px',\n        paddingTop: '22px',\n        ...style,\n      }}\n      maxHeight=\"44\"\n      onMouseEnter={handleHover}\n      onMouseLeave={handleHover}\n      onClick={handleCheckbox}\n    >\n      <Box\n        as=\"span\"\n        whiteSpace=\"nowrap\"\n        textOverflow=\"ellipsis\"\n        overflow=\"hidden\"\n        style={{ minHeight: 15 }}\n        maxWidth={!showFullTraitName ? '160' : 'full'}\n        onMouseOver={(e) => isEllipsisActive(e)}\n        onMouseLeave={() => toggleShowFullTraitName({ shouldShow: false, trait_type: '', trait_value: '' })}\n      >\n        {trait.trait_type === 'Number of traits'\n          ? `${trait.trait_value} trait${pluralize(Number(trait.trait_value))}`\n          : trait.trait_value}\n      </Box>\n      <Checkbox checked={isCheckboxSelected} hovered={hovered} onChange={handleCheckbox}>\n        <Box as=\"span\" color=\"neutral2\" minWidth=\"8\" paddingTop=\"2\" paddingRight=\"12\" position=\"relative\">\n          {!showFullTraitName && trait.trait_count}\n        </Box>\n      </Checkbox>\n    </Row>\n  )\n}\n\ninterface TraitRowProps {\n  data: Array<Trait>\n  index: number\n  style: CSSProperties\n}\n\nexport const TraitSelect = ({ traits, type, index }: { traits: Trait[]; type: string; index: number }) => {\n  const addTrait = useCollectionFilters((state) => state.addTrait)\n  const removeTrait = useCollectionFilters((state) => state.removeTrait)\n  const selectedTraits = useCollectionFilters((state) => state.traits)\n  const [search, setSearch] = useState('')\n  const debouncedSearch = useDebounce(search, 300)\n\n  const searchedTraits = useMemo(\n    () => traits.filter((t) => t.trait_value?.toString().toLowerCase().includes(debouncedSearch.toLowerCase())),\n    [debouncedSearch, traits]\n  )\n\n  const Row = useCallback(\n    function TraitRow({ data, index, style }: TraitRowProps) {\n      const trait: Trait = data[index]\n\n      const isTraitSelected = selectedTraits.find(\n        ({ trait_type, trait_value }) =>\n          trait_type === trait.trait_type && String(trait_value) === String(trait.trait_value)\n      )\n      return <TraitItem style={style} isTraitSelected={!!isTraitSelected} {...{ trait, addTrait, removeTrait }} />\n    },\n    [selectedTraits, addTrait, removeTrait]\n  )\n\n  const itemKey = useCallback((index: number, data: Trait[]) => {\n    const trait = data[index]\n    return `${trait.trait_type}_${trait.trait_value}_${index}`\n  }, [])\n\n  return traits.length ? (\n    <TraitsHeader index={index} numTraits={traits.length} title={type}>\n      <Input\n        value={search}\n        onChange={(e: FormEvent<HTMLInputElement>) => setSearch(e.currentTarget.value)}\n        placeholder=\"Search\"\n        marginTop=\"8\"\n        marginBottom=\"8\"\n        autoComplete=\"off\"\n        position=\"static\"\n        width=\"full\"\n      />\n      <Column\n        className={styles.filterDropDowns}\n        style={{ height: `${Math.min(TRAIT_ROW_HEIGHT * searchedTraits.length, styles.MAX_FILTER_DROPDOWN_HEIGHT)}px` }}\n      >\n        <AutoSizer disableWidth>\n          {({ height }) => (\n            <FixedSizeList\n              height={height}\n              width=\"100%\"\n              itemData={searchedTraits}\n              itemCount={searchedTraits.length}\n              itemSize={TRAIT_ROW_HEIGHT}\n              itemKey={itemKey}\n            >\n              {({ index, style, data }) => <Row style={style} key={itemKey(index, data)} data={data} index={index} />}\n            </FixedSizeList>\n          )}\n        </AutoSizer>\n      </Column>\n    </TraitsHeader>\n  ) : null\n}\n","import { Box } from 'nft/components/Box'\nimport * as styles from 'nft/components/collection/Filters.css'\nimport { MarketplaceSelect } from 'nft/components/collection/MarketplaceSelect'\nimport { PriceRange } from 'nft/components/collection/PriceRange'\nimport { Column, Row } from 'nft/components/Flex'\nimport { Checkbox } from 'nft/components/layout/Checkbox'\nimport { subhead } from 'nft/css/common.css'\nimport { useCollectionFilters } from 'nft/hooks'\nimport { Trait } from 'nft/hooks/useCollectionFilters'\nimport { TraitPosition } from 'nft/hooks/useTraitsOpen'\nimport { DropDownOption } from 'nft/types'\nimport { useMemo, useReducer } from 'react'\nimport { isMobile } from 'utils/userAgent'\n\nimport { FilterSortDropdown } from '../common/SortDropdown'\nimport { getSortDropdownOptions } from './CollectionNfts'\nimport { TraitSelect } from './TraitSelect'\n\nexport const Filters = ({ traitsByGroup }: { traitsByGroup: Record<string, Trait[]> }) => {\n  const { buyNow, setBuyNow } = useCollectionFilters((state) => ({\n    buyNow: state.buyNow,\n    setBuyNow: state.setBuyNow,\n  }))\n  const setSortBy = useCollectionFilters((state) => state.setSortBy)\n  const hasRarity = useCollectionFilters((state) => state.hasRarity)\n  const [buyNowHovered, toggleBuyNowHover] = useReducer((state) => !state, false)\n\n  const handleBuyNowToggle = () => {\n    setBuyNow(!buyNow)\n  }\n\n  const sortDropDownOptions: DropDownOption[] = useMemo(\n    () => getSortDropdownOptions(setSortBy, hasRarity ?? false),\n    [hasRarity, setSortBy]\n  )\n\n  return (\n    <Box className={styles.container}>\n      <Row width=\"full\" justifyContent=\"space-between\"></Row>\n      <Column marginTop=\"8\">\n        <Row\n          justifyContent=\"space-between\"\n          className={`${styles.row} ${styles.rowHover}`}\n          gap=\"2\"\n          borderRadius=\"12\"\n          paddingTop=\"12\"\n          paddingBottom=\"12\"\n          paddingLeft=\"12\"\n          onClick={(e) => {\n            e.preventDefault()\n            handleBuyNowToggle()\n          }}\n          onMouseEnter={toggleBuyNowHover}\n          onMouseLeave={toggleBuyNowHover}\n        >\n          <Box data-testid=\"nft-collection-filter-buy-now\" className={subhead}>\n            Buy now\n          </Box>\n          <Checkbox hovered={buyNowHovered} checked={buyNow} onClick={handleBuyNowToggle}>\n            <span />\n          </Checkbox>\n        </Row>\n        {isMobile && <FilterSortDropdown sortDropDownOptions={sortDropDownOptions} />}\n        <MarketplaceSelect />\n        <PriceRange />\n        {Object.entries(traitsByGroup).length > 0 && (\n          <Box\n            as=\"span\"\n            color=\"neutral2\"\n            paddingLeft=\"8\"\n            marginTop=\"12\"\n            marginBottom=\"12\"\n            className={styles.borderTop}\n          ></Box>\n        )}\n\n        <Column>\n          {Object.entries(traitsByGroup).map(([type, traits], index) => (\n            // the index is offset by two because price range and marketplace appear prior to it\n            <TraitSelect key={type} {...{ type, traits }} index={index + TraitPosition.TRAIT_START_INDEX} />\n          ))}\n        </Column>\n      </Column>\n    </Box>\n  )\n}\n","import Column from 'components/Column'\nimport Row from 'components/Row'\nimport { BAG_WIDTH, XXXL_BAG_WIDTH } from 'nft/components/bag/Bag'\nimport { useBag, useIsMobile } from 'nft/hooks'\nimport { BannerWrapper, CollectionBannerLoading } from 'nft/pages/collection'\nimport { ScreenBreakpointsPaddings } from 'nft/pages/collection/index.css'\nimport styled from 'styled-components'\n\nimport { ActivitySwitcherLoading } from './ActivitySwitcher'\nimport { CollectionNftsAndMenuLoading } from './CollectionNfts'\nimport { CollectionStatsLoading } from './CollectionStats'\n\nconst CollectionDescriptionSection = styled(Column)`\n  ${ScreenBreakpointsPaddings}\n`\n\nconst StyledColumn = styled(Column)<{ isBagExpanded: boolean }>`\n  width: ${({ isBagExpanded }) => (isBagExpanded ? `calc(100% - ${BAG_WIDTH + 16}px)` : '100%')};\n  align-self: start;\n\n  @media only screen and (min-width: ${({ theme }) => `${theme.breakpoint.xxxl}px`}) {\n    width: ${({ isBagExpanded }) => (isBagExpanded ? `calc(100% - ${XXXL_BAG_WIDTH + 16}px)` : '100%')};\n  }\n`\n\nconst StyledRow = styled(Row)`\n  gap: 24px;\n  margin-bottom: 28px;\n`\n\nexport const CollectionPageSkeleton = () => {\n  const isBagExpanded = useBag((s) => s.bagExpanded)\n  const isMobile = useIsMobile()\n\n  return (\n    <StyledColumn isBagExpanded={isBagExpanded}>\n      <BannerWrapper>\n        <CollectionBannerLoading />\n      </BannerWrapper>\n      <CollectionDescriptionSection>\n        <CollectionStatsLoading isMobile={isMobile} />\n        <StyledRow>{ActivitySwitcherLoading}</StyledRow>\n      </CollectionDescriptionSection>\n      <CollectionNftsAndMenuLoading />\n    </StyledColumn>\n  )\n}\n","export enum SupportArticleURL {\n  UNSUPPORTED_TOKEN_AND_NFT_POLICY = 'https://support.uniswap.org/hc/en-us/articles/18783694078989-Unsupported-Token-Policy',\n}\n","import { Trans } from '@lingui/macro'\nimport Column from 'components/Column'\nimport { SupportArticleURL } from 'constants/supportArticles'\nimport { AlertTriangle } from 'react-feather'\nimport styled, { useTheme } from 'styled-components'\nimport { ExternalLink, StyledInternalLink, ThemedText } from 'theme/components'\n\nconst Container = styled(Column)`\n  height: 75vh;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  padding: 48px;\n  gap: 8px;\n`\nconst StyledExternalLink = styled(ExternalLink)`\n  color: ${({ theme }) => theme.neutral2};\n`\nexport function UnavailableCollectionPage({ isBlocked }: { isBlocked?: boolean }) {\n  const theme = useTheme()\n\n  if (isBlocked) {\n    return (\n      <Container>\n        <AlertTriangle\n          width=\"48px\"\n          height=\"48px\"\n          stroke={theme.background}\n          strokeWidth=\"1px\"\n          fill={theme.critical}\n          data-testid=\"alert-icon\"\n        />\n        <ThemedText.HeadlineMedium>\n          <Trans>This collection is blocked</Trans>\n        </ThemedText.HeadlineMedium>\n        <StyledInternalLink to=\"/nfts\">\n          <Trans>Return to NFT Explore</Trans>\n        </StyledInternalLink>\n        <StyledExternalLink href={SupportArticleURL.UNSUPPORTED_TOKEN_AND_NFT_POLICY}>\n          <Trans>Learn why</Trans>\n        </StyledExternalLink>\n      </Container>\n    )\n  }\n\n  return (\n    <Container>\n      <ThemedText.HeadlineMedium>\n        <Trans>No collection assets exist at this address</Trans>\n      </ThemedText.HeadlineMedium>\n      <StyledInternalLink to=\"/nfts\">\n        <Trans>Return to NFT Explore</Trans>\n      </StyledInternalLink>\n    </Container>\n  )\n}\n","import { InterfacePageName } from '@uniswap/analytics-events'\nimport { useWeb3React } from '@web3-react/core'\nimport { Trace } from 'analytics'\nimport Column from 'components/Column'\nimport { OpacityHoverState } from 'components/Common'\nimport Row from 'components/Row'\nimport { LoadingBubble } from 'components/Tokens/loading'\nimport { useCollection } from 'graphql/data/nft/Collection'\nimport { useScreenSize } from 'hooks/useScreenSize'\nimport { BAG_WIDTH, XXXL_BAG_WIDTH } from 'nft/components/bag/Bag'\nimport { MobileHoverBag } from 'nft/components/bag/MobileHoverBag'\nimport { Activity, ActivitySwitcher, CollectionNfts, CollectionStats, Filters } from 'nft/components/collection'\nimport { CollectionNftsAndMenuLoading } from 'nft/components/collection/CollectionNfts'\nimport { CollectionPageSkeleton } from 'nft/components/collection/CollectionPageSkeleton'\nimport { UnavailableCollectionPage } from 'nft/components/collection/UnavailableCollectionPage'\nimport { BagCloseIcon } from 'nft/components/icons'\nimport { useBag, useCollectionFilters, useFiltersExpanded, useIsMobile } from 'nft/hooks'\nimport * as styles from 'nft/pages/collection/index.css'\nimport { blocklistedCollections } from 'nft/utils'\nimport { Suspense, useEffect } from 'react'\nimport { useLocation, useNavigate, useParams } from 'react-router-dom'\nimport { animated, easings, useSpring } from 'react-spring'\nimport styled from 'styled-components'\nimport { ThemedText } from 'theme/components'\nimport { TRANSITION_DURATIONS } from 'theme/styles'\nimport { Z_INDEX } from 'theme/zIndex'\n\nconst FILTER_WIDTH = 332\nconst EMPTY_TRAIT_OBJ = {}\n\nexport const CollectionBannerLoading = styled(LoadingBubble)`\n  width: 100%;\n  height: 100%;\n  border-radius: 0px;\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoint.sm}px) {\n    border-radius: 16px;\n  }\n`\n\nconst CollectionContainer = styled(Column)`\n  width: 100%;\n  align-self: start;\n  will-change: width;\n`\n\nconst AnimatedCollectionContainer = animated(CollectionContainer)\n\nconst CollectionAssetsContainer = styled.div<{ hideUnderneath: boolean }>`\n  position: ${({ hideUnderneath }) => (hideUnderneath ? 'fixed' : 'static')};\n`\n\nconst AnimatedCollectionAssetsContainer = animated(CollectionAssetsContainer)\n\nexport const BannerWrapper = styled.div`\n  height: 100px;\n  max-width: 100%;\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoint.sm}px) {\n    margin-top: 16px;\n    margin-left: 20px;\n    margin-right: 20px;\n    height: 288px;\n  }\n`\n\nconst Banner = styled.div<{ src: string }>`\n  height: 100%;\n  width: 100%;\n  background-image: url(${({ src }) => src});\n  background-position-y: center;\n  background-size: cover;\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoint.sm}px) {\n    border-radius: 16px;\n  }\n`\n\nconst CollectionDescriptionSection = styled(Column)`\n  ${styles.ScreenBreakpointsPaddings}\n`\n\nconst FiltersContainer = styled.div<{ isMobile: boolean; isFiltersExpanded: boolean }>`\n  position: ${({ isMobile }) => (isMobile ? 'fixed' : 'sticky')};\n  top: 0px;\n  left: 0px;\n  width: ${({ isMobile }) => (isMobile ? '100%' : '0px')};\n  height: ${({ isMobile, isFiltersExpanded }) => (isMobile && isFiltersExpanded ? '100%' : undefined)};\n  background: ${({ theme, isMobile }) => (isMobile ? theme.surface2 : undefined)};\n  z-index: ${Z_INDEX.modalBackdrop - 3};\n  overflow-y: ${({ isMobile }) => (isMobile ? 'scroll' : undefined)};\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoint.sm}px) {\n    top: 72px;\n  }\n`\n\nconst MobileFilterHeader = styled(Row)`\n  padding: 20px 16px;\n  justify-content: space-between;\n`\n\n// Sticky navbar on light mode looks incorrect because the box shadows from assets overlap the the edges of the navbar.\n// As a result it needs 16px padding on either side. These paddings are offset by 16px to account for this. Please see CollectionNFTs.css.ts for the additional sizing context.\n// See breakpoint values in ScreenBreakpointsPaddings above - they must match\nconst CollectionDisplaySection = styled(Row)`\n  align-items: flex-start;\n  position: relative;\n`\n\nconst IconWrapper = styled.button`\n  background-color: transparent;\n  border-radius: 8px;\n  border: none;\n  color: ${({ theme }) => theme.neutral1};\n  cursor: pointer;\n  display: flex;\n  padding: 2px 0px;\n  opacity: 1;\n\n  ${OpacityHoverState}\n`\n\nconst Collection = () => {\n  const { contractAddress } = useParams()\n  const isMobile = useIsMobile()\n  const [isFiltersExpanded, setFiltersExpanded] = useFiltersExpanded()\n  const { pathname } = useLocation()\n  const navigate = useNavigate()\n  const isActivityToggled = pathname.includes('/activity')\n  const setMarketCount = useCollectionFilters((state) => state.setMarketCount)\n  const isBagExpanded = useBag((state) => state.bagExpanded)\n  const setBagExpanded = useBag((state) => state.setBagExpanded)\n  const { chainId } = useWeb3React()\n  const screenSize = useScreenSize()\n\n  const { data: collectionStats, loading } = useCollection(contractAddress as string)\n\n  const { CollectionContainerWidthChange } = useSpring({\n    CollectionContainerWidthChange:\n      isBagExpanded && !isMobile ? (screenSize['xxxl'] ? XXXL_BAG_WIDTH : BAG_WIDTH) + 16 : 0,\n    config: {\n      duration: TRANSITION_DURATIONS.medium,\n      easing: easings.easeOutSine,\n    },\n  })\n\n  const { gridWidthOffset } = useSpring({\n    gridWidthOffset: isFiltersExpanded && !isMobile ? FILTER_WIDTH : 0,\n    config: {\n      duration: TRANSITION_DURATIONS.medium,\n      easing: easings.easeOutSine,\n    },\n  })\n\n  useEffect(() => {\n    const marketCount: Record<string, number> = {}\n    collectionStats?.marketplaceCount?.forEach(({ marketplace, count }) => {\n      marketCount[marketplace] = count\n    })\n    setMarketCount(marketCount)\n  }, [collectionStats?.marketplaceCount, setMarketCount])\n\n  useEffect(() => {\n    if (isBagExpanded && isFiltersExpanded && !screenSize['xl']) setFiltersExpanded(false)\n  }, [isBagExpanded, isFiltersExpanded, screenSize, setFiltersExpanded])\n\n  useEffect(() => {\n    setBagExpanded({ bagExpanded: false, manualClose: false })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  if (loading) return <CollectionPageSkeleton />\n  if (!collectionStats.name) return <UnavailableCollectionPage />\n\n  const toggleActivity = () => {\n    isActivityToggled\n      ? navigate(`/nfts/collection/${contractAddress}`)\n      : navigate(`/nfts/collection/${contractAddress}/activity`)\n  }\n\n  return (\n    <>\n      <Trace\n        page={InterfacePageName.NFT_COLLECTION_PAGE}\n        properties={{ collection_address: contractAddress, chain_id: chainId, is_activity_view: isActivityToggled }}\n        shouldLogImpression\n      >\n        <AnimatedCollectionContainer\n          style={{\n            width: CollectionContainerWidthChange.to((x) => `calc(100% - ${x as number}px)`),\n          }}\n        >\n          {contractAddress && !blocklistedCollections.includes(contractAddress) ? (\n            <>\n              <BannerWrapper>\n                <Banner\n                  src={\n                    collectionStats?.bannerImageUrl ? `${collectionStats.bannerImageUrl}?w=${window.innerWidth}` : ''\n                  }\n                />\n              </BannerWrapper>\n              <CollectionDescriptionSection>\n                {collectionStats && <CollectionStats stats={collectionStats} isMobile={isMobile} />}\n                <div id=\"nft-anchor\" />\n                <ActivitySwitcher\n                  showActivity={isActivityToggled}\n                  toggleActivity={() => {\n                    isFiltersExpanded && setFiltersExpanded(false)\n                    toggleActivity()\n                  }}\n                />\n              </CollectionDescriptionSection>\n              <CollectionDisplaySection>\n                <FiltersContainer isMobile={isMobile} isFiltersExpanded={isFiltersExpanded}>\n                  {isFiltersExpanded && (\n                    <>\n                      {isMobile && (\n                        <MobileFilterHeader>\n                          <ThemedText.HeadlineSmall>Filter</ThemedText.HeadlineSmall>\n                          <IconWrapper onClick={() => setFiltersExpanded(false)}>\n                            <BagCloseIcon />\n                          </IconWrapper>\n                        </MobileFilterHeader>\n                      )}\n                      <Filters traitsByGroup={collectionStats?.traits ?? EMPTY_TRAIT_OBJ} />\n                    </>\n                  )}\n                </FiltersContainer>\n\n                <AnimatedCollectionAssetsContainer\n                  hideUnderneath={isMobile && (isFiltersExpanded || isBagExpanded)}\n                  style={{\n                    transform: gridWidthOffset.to((x) => `translate(${x as number}px)`),\n                    width: gridWidthOffset.to((x) => `calc(100% - ${x as number}px)`),\n                  }}\n                >\n                  {isActivityToggled\n                    ? contractAddress && (\n                        <Activity\n                          contractAddress={contractAddress}\n                          rarityVerified={collectionStats?.rarityVerified ?? false}\n                          collectionName={collectionStats?.name ?? ''}\n                          chainId={chainId}\n                        />\n                      )\n                    : contractAddress &&\n                      collectionStats && (\n                        <Suspense fallback={<CollectionNftsAndMenuLoading />}>\n                          <CollectionNfts\n                            collectionStats={collectionStats}\n                            contractAddress={contractAddress}\n                            rarityVerified={collectionStats?.rarityVerified}\n                          />\n                        </Suspense>\n                      )}\n                </AnimatedCollectionAssetsContainer>\n              </CollectionDisplaySection>\n            </>\n          ) : (\n            <UnavailableCollectionPage isBlocked />\n          )}\n        </AnimatedCollectionContainer>\n      </Trace>\n      <MobileHoverBag />\n    </>\n  )\n}\n\nexport default Collection\n"],"names":["MobileHoverBag","itemsInBag","useBag","state","toggleBag","totalEthPrice","useBagTotalEthPrice","totalUsdPrice","useBagTotalUsdPrice","formatEther","formatNumberOrString","useFormatter","shouldShowBag","length","Row","display","sm","md","className","gap","Box","position","style","width","height","slice","map","item","index","as","src","asset","smallImageUrl","top","left","borderRadius","transform","zIndex","Column","body","fontWeight","roundAndPluralize","input","toString","type","NumberType","NFTToken","color","bodySmall","FiatNFTToken","onClick","activitySwitcherToggle","selectedActivitySwitcherToggle","BaseActivityContainer","styled","theme","surface3","ActivitySwitcherLoading","Array","fill","_","div","ActivitySwitcher","showActivity","toggleActivity","isLoading","useIsCollectionLoading","isCollectionStatsLoading","marginBottom","styles","TraceEvent","events","BrowserEvent","element","InterfaceElementName","NFT_ACTIVITY_TAB","name","NFTEventName","NFT_ACTIVITY_SELECTED","data-testid","CollectionAsset","isMobile","mediaShouldBePlaying","setCurrentTokenPlayingMedia","uniformAspectRatio","setUniformAspectRatio","renderedHeight","setRenderedHeight","bagManuallyClosed","addAssetsToBag","removeAssetsFromBag","bagExpanded","setBagExpanded","trace","useTrace","page","InterfacePageName","NFT_COLLECTION_PAGE","isSelected","useMemo","filter","tokenId","address","notForSale","BigNumber","from","priceInfo","ETHPrice","lt","provider","rarity","providers","undefined","handleAddAssetToBag","useCallback","gt","sendAnalyticsEvent","NFT_BUY_ADDED","collection_address","token_id","token_type","tokenType","handleRemoveAssetFromBag","primaryInfo","primaryInfoIcon","susFlag","SuspiciousContainer","primaryInfoRight","RankingContainer","secondaryInfo","selectedInfo","notSelectedInfo","disabledInfo","NftCard","isDisabled","Boolean","selectAsset","unselectAsset","testId","chevronContainer","chevronIcon","detailsOpen","filterDropDowns","row","rowHover","TraitPosition","MARKPLACE_INDEX","PRICE_RANGE_INDEX","TRAIT_START_INDEX","useTraitsOpen","create","devtools","set","traitsOpen","setTraitsOpen","isOpen","FilterItemWrapper","surface2","MarketNameWrapper","MARKETPLACE_ITEMS","x2y2","opensea","looksrare","sudoswap","nftx","nft20","cryptopunks","FilterItem","title","ThemedText","BodyPrimary","SubHeaderSmall","MarketplaceItem","value","addMarket","removeMarket","isMarketSelected","count","isCheckboxSelected","setCheckboxSelected","useState","hovered","toggleHover","useReducer","useEffect","handleCheckbox","e","preventDefault","NFT_FILTER_SELECTED","filter_type","NFTFilterTypes","MARKETPLACE","checkbox","Checkbox","checked","onChange","marginLeft","paddingRight","titleWithLogo","getMarketplaceIcon","onMouseEnter","onMouseLeave","FilterDropdown","items","opacity","clsx","subheadSmall","open","justifyContent","alignItems","fontSize","paddingTop","paddingLeft","paddingBottom","lineHeight","maxHeight","ChevronUpIcon","MarketplaceSelect","markets","selectedMarkets","marketCount","useCollectionFilters","setOpen","MarketplaceItems","Object","entries","includes","CheckIcon","Check","accent1","FilterSortDropdown","sortDropDownOptions","sortItems","option","SortByItem","dropDownOption","parentOnClick","displayText","sortBy","checkMark","SortDropdown","dropDownOptions","inFilters","mini","miniPrompt","toggleOpen","s","isReversed","toggleReversed","selectedIndex","setSelectedIndex","maxWidth","setMaxWidth","ref","useRef","useOnClickOutside","reversable","reverseOnClick","reverseIndex","borderBottomLeftRadius","borderBottomRightRadius","borderStyle","background","borderColor","borderWidth","padding","whiteSpace","cursor","marginRight","stopPropagation","dropdownIndex","ArrowsIcon","ReversedArrowsIcon","buttonTextMedium","secondaryColor","themeVars","colors","neutral1","secondaryWidth","secondaryHeight","right","borderTopLeftRadius","borderTopRightRadius","overflowY","transition","visibility","marginTop","DropDownItem","reduce","acc","curr","LargestItem","border","default","hover","maxWidthRef","useLayoutEffect","current","Math","ceil","getBoundingClientRect","usePriceRange","priceRangeLow","setPriceRangeLow","priceRangeHigh","setPriceRangeHigh","prevMinMax","setPrevMinMax","isClient","window","scrollToTop","anchorElement","innerWidth","breakpoints","document","getElementById","scrollIntoView","behavior","urlParamsUtils","query","clonedQuery","key","valueInQuery","initialValue","initialCollectionFilterState","JSON","stringify","buyNow","defaultSortByPointer","SortByPointers","collectionStats","forEach","initialBuyNow","search","initialSearchText","Number","String","trait_type","trait_value","startsWith","endsWith","queryTrait","modifiedTrait","trait","substring","trimTraitStr","replace","split","traitInStats","traits","find","trait_count","err","SweepContainer","surface1","StyledSlider","Slider","breakpoint","SweepLeftmostContainer","SweepRightmostContainer","SweepHeaderContainer","SweepSubContainer","InputContainer","ToggleContainer","ToggleSwitch","active","neutral2","NftDisplayContainer","NftHolder","neutral3","wholeNumberRegex","RegExp","twoDecimalPlacesRegex","NftDisplay","nfts","Sweep","contractAddress","minPrice","maxPrice","useTheme","isItemsToggled","toggleSweep","sweepAmount","setSweepAmount","lockSweepItems","collectionParams","useSweepFetcherParams","sudoSwapParams","Markets","Sudoswap","nftxParams","NFTX","nft20Params","NFT20","data","collectionAssets","useSweepNftAssets","sudoSwapAssets","nftxAssets","nft20Assets","sortedAssets","sortedAssetsTotalEth","counterNFTX","counterNFT20","jointCollections","sudoSwapAssetsInJointCollections","sweepAsset","marketplace","poolPrice","calcPoolPrice","isInSameSudoSwapPool","findIndex","isNFTX","concat","sort","a","b","validAssets","max","total","add","sweepItemsInBag","sweepEthPrice","inSweep","handleSweep","wishValueInWei","parseEther","lte","curIndex","curTotal","wishAssets","push","sub","toFixed","SubHeader","defaultValue","min","parseFloat","ethersFormatEther","step","trackStyle","handleStyle","backgroundColor","boxShadow","deprecated_shallowShadow","railStyle","floor","inputMode","autoComplete","autoCorrect","pattern","placeholder","minLength","maxLength","spellCheck","event","target","test","font-size","ALL_OTHER_MARKETS","Opensea","X2Y2","LooksRare","market","isMarketFiltered","marketsToQuery","isPooledMarket","price","low","high","symbol","TraitChipWrap","CrossIconWrap","TraitChip","span","CrossIcon","rarityStatusCache","Map","InfiniteScrollWrapperCss","css","lg","ActionsContainer","ActionsSubContainer","SortDropdownContainer","isFiltersExpanded","EmptyCollectionWrapper","ViewFullCollection","OpacityHoverState","InfiniteScrollWrapper","SweepButton","disabled","toggled","deprecated_accentTextLightPrimary","duration","timing","fast","in","SweepText","CollectionNftsLoading","LoadingAssets","CollectionNftsAndMenuLoading","marginY","loadingAsset","getSortDropdownOptions","setSortBy","hasRarity","options","SortBy","LowToHigh","HighToLow","RareToCommon","CommonToRare","CollectionNfts","rarityVerified","chainId","useWeb3React","searchByNameText","setMarketCount","setIsCollectionNftsLoading","removeTrait","reset","setMin","setMinPrice","setMax","setMaxPrice","setHasRarity","debouncedMinPrice","useDebounce","debouncedMaxPrice","debouncedSearchByNameText","UniformAspectRatios","unset","sweepIsOpen","setSweepOpen","assetQueryParams","orderBy","SortByQueries","field","asc","listed","marketplaces","toUpperCase","tokenSearchQuery","values","first","ASSET_PAGE_SIZE","collectionNfts","loading","hasNext","loadMore","useNftAssets","getPoolPosition","assetInBag","some","bagItemsInSudoSwapPool","isInSameMarketplaceCollection","calculatePrice","assets","bigA","bigB","diff","currentTokenPlayingMedia","setFiltersExpanded","useFiltersExpanded","oldStateRef","useIsMobile","screenSize","useScreenSize","getRarityStatus","setState","hasNfts","hasErc1155s","NftStandard","Erc1155","minMaxPriceChipText","marketplaceCount","getState","location","useLocation","modifiedQuery","qs","arrayFormat","parseNumbers","parseBooleans","applyFiltersFromURL","requestAnimationFrame","subscribe","url","href","stringifiedQuery","history","replaceState","syncLocalFiltersWithURL","stats","floor_price","lowValue","maxValue","handleSweepClick","handleClearAllClick","AnimatedBox","NFT_FILTER_BUTTON","NFT_FILTER_OPENED","shouldLogImpression","properties","chain_id","FilterButton","collectionCount","totalCount","CollectionSearch","SweepIcon","viewBox","flexWrap","pluralize","ClearAllButton","InfiniteScroll","next","hasMore","loader","dataLength","overflow","Center","textAlign","p","headlineMedium","setSearchByNameText","setSearch","iscollectionStatsLoading","flex","focus","minWidth","currentTarget","roundWholePercentage","n","round","collectionImageIsLoading","collectionImageIsLoadingBackground","statsText","PercentChange","isNegative","critical","success","CollectionNameText","isVerified","CollectionNameTextLoading","MobileSocialsOverflowIcon","MobileSocialsIcon","children","rel","MobileSocialsPopover","collectionSocialsIsOpen","toggleCollectionSocials","XMarkIcon","EllipsisIcon","discordUrl","margin","DiscordIcon","twitterUrl","TwitterIcon","instagram","InstagramIcon","externalUrl","ExternalIcon","SocialsIcon","CollectionName","headlineSmall","VerifiedIcon","CollectionDescriptionText","readMore","click","ReadMore","CollectionDescriptionLoading","CollectionDescription","description","showReadMore","setShowReadMore","toggleReadMore","baseRef","descriptionRef","ReactMarkdown","source","allowedTypes","renderers","paragraph","StatsItem","label","shouldHide","flexDirection","statsLoadingSkeleton","StatsRow","props","formatDelta","uniqueOwnersPercentage","total_supply","num_owners","totalSupplyStr","NFTCollectionStats","listedPercentageStr","total_listings","totalVolumeStr","total_volume","floorPriceStr","NFTTokenFloorPrice","floorChangeStr","abs","one_day_floor_change","isBagExpanded","isScreenSize","isSmallContainer","xl","DeltaArrow","delta","standard","TokenType","ERC1155","CollectionStatsLoading","CollectionStats","bannerImageUrl","imageUrl","id","priceInput","ChildreMobileWrapper","TraitsHeader","prevTraitIsOpen","showBorderTop","numTraits","PriceRange","placeholderText","setPlaceholderText","statae","pathname","handleFocus","handleBlur","PRICE_RANGE","NumericInput","v","prevMax","parseInt","newLow","onFocus","onBlur","prevMin","range","newMax","darkDeprecatedTheme","accent2","minMax","newMin","priceRangeHighNumber","priceRangeLowNumber","newMaxPrice","TraitItem","addTrait","isTraitSelected","setHovered","handleHover","toggleShowFullTraitName","shouldShow","showFullTraitName","TRAIT","overflowX","textOverflow","minHeight","onMouseOver","offsetWidth","scrollWidth","isEllipsisActive","TraitSelect","selectedTraits","debouncedSearch","searchedTraits","t","toLowerCase","itemKey","Input","AutoSizer","disableWidth","FixedSizeList","itemData","itemCount","itemSize","Filters","traitsByGroup","setBuyNow","buyNowHovered","toggleBuyNowHover","handleBuyNowToggle","subhead","CollectionDescriptionSection","ScreenBreakpointsPaddings","StyledColumn","BAG_WIDTH","xxxl","XXXL_BAG_WIDTH","StyledRow","CollectionPageSkeleton","BannerWrapper","CollectionBannerLoading","SupportArticleURL","UNSUPPORTED_TOKEN_AND_NFT_POLICY","Container","StyledExternalLink","ExternalLink","UnavailableCollectionPage","isBlocked","AlertTriangle","stroke","strokeWidth","HeadlineMedium","StyledInternalLink","to","EMPTY_TRAIT_OBJ","LoadingBubble","CollectionContainer","AnimatedCollectionContainer","animated","CollectionAssetsContainer","hideUnderneath","AnimatedCollectionAssetsContainer","Banner","FiltersContainer","Z_INDEX","modalBackdrop","MobileFilterHeader","CollectionDisplaySection","IconWrapper","button","useParams","navigate","useNavigate","isActivityToggled","useCollection","CollectionContainerWidthChange","useSpring","config","TRANSITION_DURATIONS","medium","easing","easings","easeOutSine","gridWidthOffset","manualClose","Trace","is_activity_view","x","blocklistedCollections","HeadlineSmall","BagCloseIcon","Activity","collectionName","Suspense","fallback"],"sourceRoot":""}